__main__: None -> <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\_pyi_bootstrap.py imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1), ('site', 0, 0, -1), ('pyi_importers', 0, 0, -1), ('warnings', 0, 1, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]>
sys: None -> <BuiltinModule 'sys' None imports=[] binaries=[] datas=[]>
os: None -> <PyModule 'os' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\os.pyc imports=[('subprocess', 1, 0, -1), ('os.path.pardir', 0, 0, -1), ('copy_reg', 0, 0, -1), ('os.path.altsep', 0, 0, -1), ('os.path.devnull', 0, 0, -1), ('posix._exit', 0, 1, -1), ('nt._exit', 0, 1, -1), ('posix', 0, 1, -1), ('os.path.extsep', 0, 0, -1), ('posix.*', 0, 1, -1), ('os.path.pathsep', 0, 0, -1), ('os.path', 0, 0, -1), ('warnings', 1, 0, -1), ('errno', 0, 0, -1), ('posixpath', 0, 1, -1), ('sys', 0, 0, -1), ('UserDict', 0, 1, -1), ('os.path.sep', 0, 0, -1), ('_emx_link', 0, 1, -1), ('ntpath', 0, 1, -1), ('os.path.defpath', 0, 0, -1), ('os2emxpath', 0, 1, -1), ('_emx_link.link', 0, 1, -1), ('nt.*', 0, 1, -1), ('nt', 0, 1, -1), ('os.path.curdir', 0, 0, -1)] binaries=[] datas=[]>
pyi_archive: None -> <PyModule 'pyi_archive' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_archive.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]>
pyi_os_path: None -> <PyModule 'pyi_os_path' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_os_path.pyc imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]>
site: None -> <PyModule 'site' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\fake\fake-site.pyc imports=[('pydoc', 1, 0, -1)] binaries=[] datas=[]>
pyi_importers: None -> <PyModule 'pyi_importers' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_importers.pyc imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]>
warnings: None -> <PyModule 'warnings' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\warnings.pyc imports=[('linecache', 0, 0, -1), ('_warnings.default_action', 0, 0, -1), ('sys', 0, 0, -1), ('_warnings', 0, 0, -1), ('types', 0, 0, -1), ('_warnings.warn', 0, 0, -1), ('_warnings.once_registry', 0, 0, -1), ('_warnings.filters', 0, 0, -1), ('_warnings.warn_explicit', 0, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
encodings: None -> <PkgModule 'encodings' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\__init__.pyc imports=[('encodings', 0, 0, -1), ('codecs', 0, 0, -1), ('encodings.aliases', 0, 0, -1), ('__builtin__', 0, 0, -1), ('encodings.aliases', 0, 0, -1), ('encodings.ascii', 0, 0, -1), ('encodings.base64_codec', 0, 0, -1), ('encodings.big5', 0, 0, -1), ('encodings.big5hkscs', 0, 0, -1), ('encodings.bz2_codec', 0, 0, -1), ('encodings.charmap', 0, 0, -1), ('encodings.cp037', 0, 0, -1), ('encodings.cp1006', 0, 0, -1), ('encodings.cp1026', 0, 0, -1), ('encodings.cp1140', 0, 0, -1), ('encodings.cp1250', 0, 0, -1), ('encodings.cp1251', 0, 0, -1), ('encodings.cp1252', 0, 0, -1), ('encodings.cp1253', 0, 0, -1), ('encodings.cp1254', 0, 0, -1), ('encodings.cp1255', 0, 0, -1), ('encodings.cp1256', 0, 0, -1), ('encodings.cp1257', 0, 0, -1), ('encodings.cp1258', 0, 0, -1), ('encodings.cp424', 0, 0, -1), ('encodings.cp437', 0, 0, -1), ('encodings.cp500', 0, 0, -1), ('encodings.cp720', 0, 0, -1), ('encodings.cp737', 0, 0, -1), ('encodings.cp775', 0, 0, -1), ('encodings.cp850', 0, 0, -1), ('encodings.cp852', 0, 0, -1), ('encodings.cp855', 0, 0, -1), ('encodings.cp856', 0, 0, -1), ('encodings.cp857', 0, 0, -1), ('encodings.cp858', 0, 0, -1), ('encodings.cp860', 0, 0, -1), ('encodings.cp861', 0, 0, -1), ('encodings.cp862', 0, 0, -1), ('encodings.cp863', 0, 0, -1), ('encodings.cp864', 0, 0, -1), ('encodings.cp865', 0, 0, -1), ('encodings.cp866', 0, 0, -1), ('encodings.cp869', 0, 0, -1), ('encodings.cp874', 0, 0, -1), ('encodings.cp875', 0, 0, -1), ('encodings.cp932', 0, 0, -1), ('encodings.cp949', 0, 0, -1), ('encodings.cp950', 0, 0, -1), ('encodings.euc_jisx0213', 0, 0, -1), ('encodings.euc_jis_2004', 0, 0, -1), ('encodings.euc_jp', 0, 0, -1), ('encodings.euc_kr', 0, 0, -1), ('encodings.gb18030', 0, 0, -1), ('encodings.gb2312', 0, 0, -1), ('encodings.gbk', 0, 0, -1), ('encodings.hex_codec', 0, 0, -1), ('encodings.hp_roman8', 0, 0, -1), ('encodings.hz', 0, 0, -1), ('encodings.idna', 0, 0, -1), ('encodings.iso2022_jp', 0, 0, -1), ('encodings.iso2022_jp_1', 0, 0, -1), ('encodings.iso2022_jp_2', 0, 0, -1), ('encodings.iso2022_jp_2004', 0, 0, -1), ('encodings.iso2022_jp_3', 0, 0, -1), ('encodings.iso2022_jp_ext', 0, 0, -1), ('encodings.iso2022_kr', 0, 0, -1), ('encodings.iso8859_1', 0, 0, -1), ('encodings.iso8859_10', 0, 0, -1), ('encodings.iso8859_11', 0, 0, -1), ('encodings.iso8859_13', 0, 0, -1), ('encodings.iso8859_14', 0, 0, -1), ('encodings.iso8859_15', 0, 0, -1), ('encodings.iso8859_16', 0, 0, -1), ('encodings.iso8859_2', 0, 0, -1), ('encodings.iso8859_3', 0, 0, -1), ('encodings.iso8859_4', 0, 0, -1), ('encodings.iso8859_5', 0, 0, -1), ('encodings.iso8859_6', 0, 0, -1), ('encodings.iso8859_7', 0, 0, -1), ('encodings.iso8859_8', 0, 0, -1), ('encodings.iso8859_9', 0, 0, -1), ('encodings.johab', 0, 0, -1), ('encodings.koi8_r', 0, 0, -1), ('encodings.koi8_u', 0, 0, -1), ('encodings.latin_1', 0, 0, -1), ('encodings.mac_arabic', 0, 0, -1), ('encodings.mac_centeuro', 0, 0, -1), ('encodings.mac_croatian', 0, 0, -1), ('encodings.mac_cyrillic', 0, 0, -1), ('encodings.mac_farsi', 0, 0, -1), ('encodings.mac_greek', 0, 0, -1), ('encodings.mac_iceland', 0, 0, -1), ('encodings.mac_latin2', 0, 0, -1), ('encodings.mac_roman', 0, 0, -1), ('encodings.mac_romanian', 0, 0, -1), ('encodings.mac_turkish', 0, 0, -1), ('encodings.mbcs', 0, 0, -1), ('encodings.palmos', 0, 0, -1), ('encodings.ptcp154', 0, 0, -1), ('encodings.punycode', 0, 0, -1), ('encodings.quopri_codec', 0, 0, -1), ('encodings.raw_unicode_escape', 0, 0, -1), ('encodings.rot_13', 0, 0, -1), ('encodings.shift_jis', 0, 0, -1), ('encodings.shift_jisx0213', 0, 0, -1), ('encodings.shift_jis_2004', 0, 0, -1), ('encodings.string_escape', 0, 0, -1), ('encodings.tis_620', 0, 0, -1), ('encodings.undefined', 0, 0, -1), ('encodings.unicode_escape', 0, 0, -1), ('encodings.unicode_internal', 0, 0, -1), ('encodings.utf_16', 0, 0, -1), ('encodings.utf_16_be', 0, 0, -1), ('encodings.utf_16_le', 0, 0, -1), ('encodings.utf_32', 0, 0, -1), ('encodings.utf_32_be', 0, 0, -1), ('encodings.utf_32_le', 0, 0, -1), ('encodings.utf_7', 0, 0, -1), ('encodings.utf_8', 0, 0, -1), ('encodings.utf_8_sig', 0, 0, -1), ('encodings.uu_codec', 0, 0, -1), ('encodings.zlib_codec', 0, 0, -1)] binaries=[] datas=[]>
subprocess: None -> <PyModule 'subprocess' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\subprocess.pyc imports=[('_subprocess.SW_HIDE', 0, 1, -1), ('gc', 0, 0, -1), ('_subprocess.STARTF_USESHOWWINDOW', 0, 1, -1), ('_subprocess', 0, 1, -1), ('sys', 0, 0, -1), ('_subprocess.STARTF_USESTDHANDLES', 0, 1, -1), ('types', 0, 0, -1), ('fcntl', 0, 1, -1), ('os', 0, 0, -1), ('threading', 0, 1, -1), ('_subprocess.STD_INPUT_HANDLE', 0, 1, -1), ('msvcrt', 0, 1, -1), ('_subprocess.CREATE_NEW_PROCESS_GROUP', 0, 1, -1), ('_subprocess.STD_OUTPUT_HANDLE', 0, 1, -1), ('traceback', 0, 0, -1), ('_subprocess.CREATE_NEW_CONSOLE', 0, 1, -1), ('errno', 0, 0, -1), ('signal', 0, 0, -1), ('pickle', 0, 1, -1), ('select', 0, 1, -1), ('_subprocess.STD_ERROR_HANDLE', 0, 1, -1)] binaries=[] datas=[]>
copy_reg: None -> <PyModule 'copy_reg' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\copy_reg.pyc imports=[('types.ClassType', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
nt: None -> <BuiltinModule 'nt' None imports=[] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
errno: None -> <BuiltinModule 'errno' None imports=[] binaries=[] datas=[]>
posixpath: None -> <PyModule 'posixpath' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\posixpath.pyc imports=[('re', 1, 1, -1), ('pwd', 1, 1, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('genericpath.*', 0, 0, -1)] binaries=[] datas=[]>
UserDict: None -> <PyModule 'UserDict' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\UserDict.pyc imports=[('_abcoll', 0, 0, -1), ('copy', 1, 0, -1)] binaries=[] datas=[]>
_emx_link: None -> None
  DEL _emx_link
ntpath: None -> <PyModule 'ntpath' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ntpath.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('nt._getfullpathname', 0, 0, -1), ('warnings', 0, 0, -1), ('nt._isdir', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('nt', 0, 0, -1), ('string', 1, 0, -1), ('genericpath.*', 0, 0, -1)] binaries=[] datas=[]>
os2emxpath: None -> <PyModule 'os2emxpath' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\os2emxpath.pyc imports=[('ntpath.splitdrive', 0, 0, -1), ('ntpath.walk', 0, 0, -1), ('os', 0, 0, -1), ('ntpath.splitext', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('ntpath.isabs', 0, 0, -1), ('ntpath.split', 0, 0, -1), ('ntpath.islink', 0, 0, -1), ('ntpath.expanduser', 0, 0, -1), ('genericpath.*', 0, 0, -1), ('ntpath.expandvars', 0, 0, -1), ('ntpath', 0, 0, -1)] binaries=[] datas=[]>
_emx_link: None -> None
  DEL _emx_link
_subprocess: None -> <BuiltinModule '_subprocess' None imports=[] binaries=[] datas=[]>
gc: None -> <BuiltinModule 'gc' None imports=[] binaries=[] datas=[]>
types: None -> <PyModule 'types' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\types.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
fcntl: None -> None
  DEL fcntl
threading: None -> <PyModule 'threading' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\threading.pyc imports=[('collections.deque', 0, 0, -1), ('random.random', 1, 0, -1), ('_threading_local.local', 0, 1, -1), ('sys', 0, 0, -1), ('collections', 0, 0, -1), ('thread._local', 0, 0, -1), ('traceback.format_exc', 0, 0, -1), ('warnings', 0, 0, -1), ('time.time', 0, 0, -1), ('thread', 0, 0, -1), ('thread.stack_size', 0, 0, -1), ('time.sleep', 0, 0, -1), ('traceback', 0, 0, -1), ('random', 1, 0, -1), ('time', 0, 0, -1), ('_threading_local', 0, 1, -1)] binaries=[] datas=[]>
msvcrt: None -> <BuiltinModule 'msvcrt' None imports=[] binaries=[] datas=[]>
traceback: None -> <PyModule 'traceback' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\traceback.pyc imports=[('linecache', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
signal: None -> <BuiltinModule 'signal' None imports=[] binaries=[] datas=[]>
pickle: None -> <PyModule 'pickle' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\pickle.pyc imports=[('re', 0, 0, -1), ('copy_reg.dispatch_table', 0, 0, -1), ('types.*', 0, 0, -1), ('marshal', 0, 0, -1), ('types', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('struct', 0, 0, -1), ('org.python.core', 0, 0, -1), ('copy_reg', 0, 0, -1), ('cStringIO', 0, 0, -1), ('copy_reg._extension_cache', 0, 0, -1), ('doctest', 1, 0, -1), ('StringIO', 0, 1, -1), ('copy_reg._inverted_registry', 0, 0, -1), ('binascii', 0, 0, -1), ('copy_reg._extension_registry', 0, 0, -1), ('org.python.core.PyStringMap', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
select: None -> <ExtensionModule 'select' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\select.pyd imports=[] binaries=[] datas=[]>
collections: None -> <PyModule 'collections' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\collections.pyc imports=[('keyword.iskeyword', 0, 0, -1), ('cPickle.loads', 0, 1, -1), ('itertools.repeat', 0, 0, -1), ('cPickle.dumps', 0, 1, -1), ('_collections', 0, 0, -1), ('_abcoll.*', 0, 0, -1), ('itertools', 0, 0, -1), ('itertools.starmap', 0, 0, -1), ('sys', 0, 0, -1), ('cPickle', 0, 1, -1), ('doctest', 0, 1, -1), ('_collections.defaultdict', 0, 0, -1), ('heapq', 0, 0, -1), ('dummy_thread', 0, 1, -1), ('itertools.imap', 0, 0, -1), ('_abcoll', 0, 0, -1), ('operator.eq', 0, 0, -1), ('itertools.chain', 0, 0, -1), ('keyword', 0, 0, -1), ('thread', 0, 0, -1), ('operator.itemgetter', 0, 0, -1), ('dummy_thread.get_ident', 0, 1, -1), ('operator', 0, 0, -1), ('_collections.deque', 0, 0, -1), ('thread.get_ident', 0, 0, -1)] binaries=[] datas=[]>
random: None -> <PyModule 'random' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\random.pyc imports=[('os', 0, 0, -1), ('warnings', 0, 0, -1), ('__future__', 0, 0, -1), ('hashlib', 0, 0, -1), ('math.log', 0, 0, -1), ('math.cos', 0, 0, -1), ('time', 1, 1, -1), ('math.sin', 0, 0, -1), ('math.sqrt', 0, 0, -1), ('math', 0, 0, -1), ('__future__.division', 0, 0, -1), ('os.urandom', 0, 0, -1), ('binascii', 0, 0, -1), ('_random', 0, 0, -1), ('math.acos', 0, 0, -1), ('types', 0, 0, -1), ('types.BuiltinMethodType', 0, 0, -1), ('binascii.hexlify', 0, 0, -1), ('types.MethodType', 0, 0, -1), ('math.exp', 0, 0, -1), ('time', 1, 0, -1), ('math.pi', 0, 0, -1), ('math.e', 0, 0, -1), ('math.ceil', 0, 0, -1), ('warnings.warn', 0, 0, -1)] binaries=[] datas=[]>
_threading_local: None -> <PyModule '_threading_local' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\_threading_local.pyc imports=[('threading.current_thread', 0, 0, -1), ('threading', 0, 0, -1), ('threading.RLock', 0, 0, -1), ('threading', 1, 0, -1)] binaries=[] datas=[]>
thread: None -> <BuiltinModule 'thread' None imports=[] binaries=[] datas=[]>
time: None -> <BuiltinModule 'time' None imports=[('_strptime', 0, 0, -1)] binaries=[] datas=[]>
keyword: None -> <PyModule 'keyword' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\keyword.pyc imports=[('sys', 1, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
cPickle: None -> <BuiltinModule 'cPickle' None imports=[('copy_reg', 0, 0, -1), ('types', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
itertools: None -> <BuiltinModule 'itertools' None imports=[] binaries=[] datas=[]>
_collections: None -> <BuiltinModule '_collections' None imports=[] binaries=[] datas=[]>
_abcoll: None -> <PyModule '_abcoll' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\_abcoll.pyc imports=[('abc', 0, 0, -1), ('abc.abstractmethod', 0, 0, -1), ('abc.ABCMeta', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
doctest: None -> <PyModule 'doctest' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\doctest.pyc imports=[('collections', 0, 0, -1), ('linecache', 0, 0, -1), ('StringIO', 0, 0, -1), ('sys', 0, 0, -1), ('pdb', 0, 0, -1), ('os', 0, 0, -1), ('StringIO.StringIO', 0, 0, -1), ('warnings', 0, 0, -1), ('re', 0, 0, -1), ('__future__', 0, 0, -1), ('inspect', 0, 0, -1), ('collections.namedtuple', 0, 0, -1), ('pdb', 1, 0, -1), ('difflib', 0, 0, -1), ('traceback', 0, 0, -1), ('types', 1, 0, -1), ('unittest', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
heapq: None -> <PyModule 'heapq' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\heapq.pyc imports=[('operator.itemgetter', 0, 0, -1), ('itertools', 0, 0, -1), ('doctest', 0, 1, -1), ('operator', 0, 0, -1), ('itertools.chain', 0, 0, -1), ('itertools.tee', 0, 0, -1), ('itertools.islice', 0, 0, -1), ('itertools.izip', 0, 0, -1), ('_heapq', 0, 0, -1), ('itertools.count', 0, 0, -1), ('itertools.imap', 0, 0, -1), ('_heapq.*', 0, 0, -1)] binaries=[] datas=[]>
dummy_thread: None -> <PyModule 'dummy_thread' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\dummy_thread.pyc imports=[('traceback', 0, 0, -1)] binaries=[] datas=[]>
operator: None -> <BuiltinModule 'operator' None imports=[] binaries=[] datas=[]>
re: None -> <PyModule 're' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\re.pyc imports=[('sre_constants', 1, 0, -1), ('sys', 0, 0, -1), ('sre_parse', 0, 0, -1), ('sre_constants.BRANCH', 1, 0, -1), ('sre_compile', 0, 0, -1), ('sre_constants.SUBPATTERN', 1, 0, -1), ('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
sre_constants: None -> <PyModule 'sre_constants' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\sre_constants.pyc imports=[('_sre', 0, 0, -1), ('_sre.MAXREPEAT', 0, 0, -1), ('_sre', 0, 1, -1)] binaries=[] datas=[]>
sre_parse: None -> <PyModule 'sre_parse' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\sre_parse.pyc imports=[('sre_constants', 0, 0, -1), ('sys', 0, 0, -1), ('sre_constants.*', 0, 0, -1)] binaries=[] datas=[]>
sre_compile: None -> <PyModule 'sre_compile' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\sre_compile.pyc imports=[('sys', 0, 0, -1), ('sre_constants.*', 0, 0, -1), ('sre_parse', 0, 0, -1), ('sre_constants', 0, 0, -1), ('_sre', 0, 0, -1), ('array', 1, 0, -1)] binaries=[] datas=[]>
_sre: None -> <BuiltinModule '_sre' None imports=[('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
array: None -> <BuiltinModule 'array' None imports=[] binaries=[] datas=[]>
string: None -> <PyModule 'string' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\string.pyc imports=[('strop.uppercase', 0, 0, -1), ('re', 0, 0, -1), ('strop', 0, 0, -1), ('strop.lowercase', 0, 0, -1), ('strop.whitespace', 0, 0, -1), ('strop.maketrans', 0, 0, -1)] binaries=[] datas=[]>
strop: None -> <BuiltinModule 'strop' None imports=[] binaries=[] datas=[]>
abc: None -> <PyModule 'abc' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\abc.pyc imports=[('_weakrefset.WeakSet', 0, 0, -1), ('_weakrefset', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
_weakrefset: None -> <PyModule '_weakrefset' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\_weakrefset.pyc imports=[('_weakref.ref', 0, 0, -1), ('_weakref', 0, 0, -1)] binaries=[] datas=[]>
_weakref: None -> <BuiltinModule '_weakref' None imports=[] binaries=[] datas=[]>
linecache: None -> <PyModule 'linecache' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\linecache.pyc imports=[('os', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
StringIO: None -> <PyModule 'StringIO' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\StringIO.pyc imports=[('sys', 1, 0, -1), ('errno', 0, 0, -1), ('errno.EINVAL', 0, 0, -1)] binaries=[] datas=[]>
pdb: None -> <PyModule 'pdb' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\pdb.pyc imports=[('linecache', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('repr.Repr', 0, 0, -1), ('bdb', 0, 0, -1), ('re', 0, 0, -1), ('pprint', 0, 0, -1), ('pdb', 0, 1, -1), ('shlex', 1, 1, -1), ('repr', 0, 0, -1), ('__main__', 1, 0, -1), ('cmd', 0, 0, -1), ('traceback', 0, 0, -1), ('readline', 1, 0, -1)] binaries=[] datas=[]>
__future__: None -> <PyModule '__future__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\__future__.pyc imports=[] binaries=[] datas=[]>
inspect: None -> <PyModule 'inspect' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\inspect.pyc imports=[('collections', 0, 0, -1), ('re', 0, 0, -1), ('dis', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('imp', 0, 0, -1), ('string', 0, 0, -1), ('operator', 0, 0, -1), ('linecache', 0, 0, -1), ('operator.attrgetter', 0, 0, -1), ('collections.namedtuple', 0, 0, -1), ('tokenize', 0, 0, -1)] binaries=[] datas=[]>
difflib: None -> <PyModule 'difflib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\difflib.pyc imports=[('difflib', 1, 0, -1), ('collections', 0, 0, -1), ('re', 0, 0, -1), ('functools', 0, 0, -1), ('functools.reduce', 0, 0, -1), ('doctest', 1, 0, -1), ('re', 1, 0, -1), ('heapq', 0, 0, -1), ('collections.namedtuple', 0, 0, -1)] binaries=[] datas=[]>
unittest: None -> <PkgModule 'unittest' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\__init__.pyc imports=[('loader.findTestCases', 0, 0, 1), ('result.TestResult', 0, 0, 1), ('case.skipIf', 0, 0, 1), ('case.skip', 0, 0, 1), ('case.TestCase', 0, 0, 1), ('main.main', 0, 0, 1), ('signals', 0, 0, 1), ('result', 0, 0, 1), ('loader.TestLoader', 0, 0, 1), ('main.TestProgram', 0, 0, 1), ('suite', 0, 0, 1), ('signals.installHandler', 0, 0, 1), ('case.SkipTest', 0, 0, 1), ('suite.TestSuite', 0, 0, 1), ('runner', 0, 0, 1), ('runner.TextTestResult', 0, 0, 1), ('loader.defaultTestLoader', 0, 0, 1), ('suite.BaseTestSuite', 0, 0, 1), ('loader', 0, 0, 1), ('runner.TextTestRunner', 0, 0, 1), ('case.expectedFailure', 0, 0, 1), ('signals.removeResult', 0, 0, 1), ('main', 0, 0, 1), ('signals.registerResult', 0, 0, 1), ('case.skipUnless', 0, 0, 1), ('signals.removeHandler', 0, 0, 1), ('case.FunctionTestCase', 0, 0, 1), ('case', 0, 0, 1), ('loader.getTestCaseNames', 0, 0, 1), ('loader.makeSuite', 0, 0, 1)] binaries=[] datas=[]>
tempfile: None -> <PyModule 'tempfile' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\tempfile.pyc imports=[('os', 0, 0, -1), ('dummy_thread', 0, 1, -1), ('thread', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('fcntl', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('random', 0, 0, -1), ('StringIO', 0, 1, -1), ('errno', 0, 0, -1), ('random.Random', 0, 0, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
repr: None -> <PyModule 'repr' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\repr.pyc imports=[('itertools.islice', 0, 0, -1), ('itertools', 0, 0, -1), ('__builtin__', 0, 0, -1)] binaries=[] datas=[]>
bdb: None -> <PyModule 'bdb' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\bdb.pyc imports=[('repr', 1, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('fnmatch', 0, 0, -1), ('linecache', 1, 0, -1), ('__main__', 1, 1, -1)] binaries=[] datas=[]>
pprint: None -> <PyModule 'pprint' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\pprint.pyc imports=[('sys', 0, 0, -1), ('time', 1, 0, -1), ('warnings', 0, 0, -1), ('cStringIO', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1)] binaries=[] datas=[]>
shlex: None -> <PyModule 'shlex' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\shlex.pyc imports=[('collections.deque', 0, 0, -1), ('sys', 0, 0, -1), ('collections', 0, 0, -1), ('os.path', 0, 0, -1), ('cStringIO', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1)] binaries=[] datas=[]>
cmd: None -> <PyModule 'cmd' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\cmd.pyc imports=[('sys', 1, 0, -1), ('readline', 1, 1, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
readline: None -> None
  DEL readline
__builtin__: None -> <BuiltinModule '__builtin__' None imports=[] binaries=[] datas=[]>
fnmatch: None -> <PyModule 'fnmatch' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\fnmatch.pyc imports=[('re', 0, 0, -1), ('posixpath', 1, 0, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
genericpath: None -> <PyModule 'genericpath' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\genericpath.pyc imports=[('os', 0, 0, -1), ('stat', 0, 0, -1)] binaries=[] datas=[]>
stat: None -> <PyModule 'stat' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\stat.pyc imports=[] binaries=[] datas=[]>
_warnings: None -> <BuiltinModule '_warnings' None imports=[] binaries=[] datas=[]>
cStringIO: None -> <BuiltinModule 'cStringIO' None imports=[('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
_strptime: None -> <PyModule '_strptime' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\_strptime.pyc imports=[('thread.allocate_lock', 0, 0, -1), ('dummy_thread', 0, 0, -1), ('re', 0, 0, -1), ('re.compile', 0, 0, -1), ('re.escape', 0, 0, -1), ('calendar', 0, 0, -1), ('locale', 0, 0, -1), ('datetime.date', 0, 0, -1), ('datetime', 0, 0, -1), ('dummy_thread.allocate_lock', 0, 0, -1), ('thread', 0, 0, -1), ('time', 0, 0, -1), ('re.IGNORECASE', 0, 0, -1)] binaries=[] datas=[]>
calendar: None -> <PyModule 'calendar' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\calendar.pyc imports=[('optparse', 1, 0, -1), ('datetime', 0, 0, -1), ('sys', 0, 0, -1), ('locale', 0, 0, -1)] binaries=[] datas=[]>
locale: None -> <PyModule 'locale' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\locale.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('_locale', 1, 0, -1), ('os', 1, 0, -1), ('operator', 0, 0, -1), ('_locale', 0, 0, -1), ('_locale.*', 0, 0, -1), ('functools', 0, 0, -1), ('encodings', 0, 0, -1), ('encodings.aliases', 0, 0, -1)] binaries=[] datas=[]>
datetime: None -> <BuiltinModule 'datetime' None imports=[] binaries=[] datas=[]>
optparse: None -> <PyModule 'optparse' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\optparse.pyc imports=[('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('__builtin__', 1, 1, -1), ('gettext.gettext', 0, 0, -1), ('textwrap', 0, 0, -1), ('gettext', 0, 0, -1)] binaries=[] datas=[]>
gettext: None -> <PyModule 'gettext' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\gettext.pyc imports=[('re', 0, 0, -1), ('locale.normalize', 1, 0, -1), ('sys', 0, 0, -1), ('errno.ENOENT', 0, 0, -1), ('copy', 0, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('StringIO.StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('struct', 0, 0, -1), ('locale', 1, 0, -1), ('token', 1, 0, -1), ('tokenize', 1, 0, -1), ('__builtin__', 1, 0, -1), ('errno', 0, 0, -1), ('locale', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
textwrap: None -> <PyModule 'textwrap' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\textwrap.pyc imports=[('re', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
copy: None -> <PyModule 'copy' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\copy.pyc imports=[('copy_reg.dispatch_table', 0, 0, -1), ('weakref', 0, 0, -1), ('sys', 1, 1, -1), ('types', 0, 0, -1), ('copy_reg', 0, 0, -1), ('repr', 1, 0, -1), ('org.python.core.PyStringMap', 0, 0, -1), ('org.python.core', 0, 0, -1)] binaries=[] datas=[]>
struct: None -> <PyModule 'struct' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\struct.pyc imports=[('_struct.__doc__', 0, 0, -1), ('_struct.*', 0, 0, -1), ('_struct', 0, 0, -1), ('_struct._clearcache', 0, 0, -1)] binaries=[] datas=[]>
token: None -> <PyModule 'token' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\token.pyc imports=[('sys', 1, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
tokenize: None -> <PyModule 'tokenize' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\tokenize.pyc imports=[('sys', 0, 1, -1), ('token.*', 0, 0, -1), ('re', 0, 0, -1), ('token', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
_locale: None -> <BuiltinModule '_locale' None imports=[] binaries=[] datas=[]>
functools: None -> <PyModule 'functools' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\functools.pyc imports=[('_functools.reduce', 0, 0, -1), ('_functools.partial', 0, 0, -1), ('_functools', 0, 0, -1)] binaries=[] datas=[]>
encodings.aliases: None -> <PyModule 'encodings.aliases' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\aliases.pyc imports=[] binaries=[] datas=[]>
_functools: None -> <BuiltinModule '_functools' None imports=[] binaries=[] datas=[]>
encodings.encodings: None -> None
encodings.codecs: None -> None
codecs: None -> <PyModule 'codecs' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\codecs.pyc imports=[('encodings', 0, 1, -1), ('_codecs', 0, 0, -1), ('_codecs.*', 0, 0, -1), ('sys', 0, 0, -1), ('__builtin__', 0, 0, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]>
encodings.__builtin__: None -> None
encodings.ascii: None -> <PyModule 'encodings.ascii' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\ascii.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.base64_codec: None -> <PyModule 'encodings.base64_codec' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\base64_codec.pyc imports=[('base64', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.big5: None -> <PyModule 'encodings.big5' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\big5.pyc imports=[('_codecs_tw', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.big5hkscs: None -> <PyModule 'encodings.big5hkscs' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\big5hkscs.pyc imports=[('_codecs_hk', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.bz2_codec: None -> <PyModule 'encodings.bz2_codec' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\bz2_codec.pyc imports=[('codecs', 0, 0, -1), ('bz2', 0, 0, -1)] binaries=[] datas=[]>
encodings.charmap: None -> <PyModule 'encodings.charmap' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\charmap.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp037: None -> <PyModule 'encodings.cp037' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp037.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1006: None -> <PyModule 'encodings.cp1006' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1006.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1026: None -> <PyModule 'encodings.cp1026' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1026.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1140: None -> <PyModule 'encodings.cp1140' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1140.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1250: None -> <PyModule 'encodings.cp1250' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1250.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1251: None -> <PyModule 'encodings.cp1251' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1251.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1252: None -> <PyModule 'encodings.cp1252' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1252.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1253: None -> <PyModule 'encodings.cp1253' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1253.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1254: None -> <PyModule 'encodings.cp1254' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1254.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1255: None -> <PyModule 'encodings.cp1255' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1255.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1256: None -> <PyModule 'encodings.cp1256' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1256.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1257: None -> <PyModule 'encodings.cp1257' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1257.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1258: None -> <PyModule 'encodings.cp1258' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp1258.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp424: None -> <PyModule 'encodings.cp424' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp424.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp437: None -> <PyModule 'encodings.cp437' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp437.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp500: None -> <PyModule 'encodings.cp500' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp500.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp720: None -> <PyModule 'encodings.cp720' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp720.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp737: None -> <PyModule 'encodings.cp737' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp737.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp775: None -> <PyModule 'encodings.cp775' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp775.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp850: None -> <PyModule 'encodings.cp850' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp850.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp852: None -> <PyModule 'encodings.cp852' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp852.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp855: None -> <PyModule 'encodings.cp855' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp855.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp856: None -> <PyModule 'encodings.cp856' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp856.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp857: None -> <PyModule 'encodings.cp857' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp857.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp858: None -> <PyModule 'encodings.cp858' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp858.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp860: None -> <PyModule 'encodings.cp860' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp860.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp861: None -> <PyModule 'encodings.cp861' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp861.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp862: None -> <PyModule 'encodings.cp862' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp862.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp863: None -> <PyModule 'encodings.cp863' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp863.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp864: None -> <PyModule 'encodings.cp864' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp864.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp865: None -> <PyModule 'encodings.cp865' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp865.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp866: None -> <PyModule 'encodings.cp866' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp866.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp869: None -> <PyModule 'encodings.cp869' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp869.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp874: None -> <PyModule 'encodings.cp874' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp874.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp875: None -> <PyModule 'encodings.cp875' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp875.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp932: None -> <PyModule 'encodings.cp932' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp932.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp949: None -> <PyModule 'encodings.cp949' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp949.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp950: None -> <PyModule 'encodings.cp950' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\cp950.pyc imports=[('_codecs_tw', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jisx0213: None -> <PyModule 'encodings.euc_jisx0213' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\euc_jisx0213.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jis_2004: None -> <PyModule 'encodings.euc_jis_2004' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\euc_jis_2004.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jp: None -> <PyModule 'encodings.euc_jp' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\euc_jp.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_kr: None -> <PyModule 'encodings.euc_kr' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\euc_kr.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.gb18030: None -> <PyModule 'encodings.gb18030' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\gb18030.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.gb2312: None -> <PyModule 'encodings.gb2312' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\gb2312.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.gbk: None -> <PyModule 'encodings.gbk' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\gbk.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.hex_codec: None -> <PyModule 'encodings.hex_codec' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\hex_codec.pyc imports=[('binascii', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.hp_roman8: None -> <PyModule 'encodings.hp_roman8' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\hp_roman8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.hz: None -> <PyModule 'encodings.hz' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\hz.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.idna: None -> <PyModule 'encodings.idna' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\idna.pyc imports=[('unicodedata.ucd_3_2_0', 0, 0, -1), ('re', 0, 0, -1), ('unicodedata', 0, 0, -1), ('codecs', 0, 0, -1), ('stringprep', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp: None -> <PyModule 'encodings.iso2022_jp' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso2022_jp.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_1: None -> <PyModule 'encodings.iso2022_jp_1' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso2022_jp_1.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_2: None -> <PyModule 'encodings.iso2022_jp_2' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso2022_jp_2.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_2004: None -> <PyModule 'encodings.iso2022_jp_2004' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso2022_jp_2004.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_3: None -> <PyModule 'encodings.iso2022_jp_3' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso2022_jp_3.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_ext: None -> <PyModule 'encodings.iso2022_jp_ext' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso2022_jp_ext.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_kr: None -> <PyModule 'encodings.iso2022_kr' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso2022_kr.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_1: None -> <PyModule 'encodings.iso8859_1' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_1.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_10: None -> <PyModule 'encodings.iso8859_10' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_10.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_11: None -> <PyModule 'encodings.iso8859_11' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_11.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_13: None -> <PyModule 'encodings.iso8859_13' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_13.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_14: None -> <PyModule 'encodings.iso8859_14' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_14.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_15: None -> <PyModule 'encodings.iso8859_15' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_15.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_16: None -> <PyModule 'encodings.iso8859_16' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_16.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_2: None -> <PyModule 'encodings.iso8859_2' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_2.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_3: None -> <PyModule 'encodings.iso8859_3' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_3.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_4: None -> <PyModule 'encodings.iso8859_4' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_4.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_5: None -> <PyModule 'encodings.iso8859_5' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_5.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_6: None -> <PyModule 'encodings.iso8859_6' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_6.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_7: None -> <PyModule 'encodings.iso8859_7' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_7.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_8: None -> <PyModule 'encodings.iso8859_8' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_9: None -> <PyModule 'encodings.iso8859_9' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\iso8859_9.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.johab: None -> <PyModule 'encodings.johab' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\johab.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.koi8_r: None -> <PyModule 'encodings.koi8_r' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\koi8_r.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.koi8_u: None -> <PyModule 'encodings.koi8_u' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\koi8_u.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.latin_1: None -> <PyModule 'encodings.latin_1' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\latin_1.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_arabic: None -> <PyModule 'encodings.mac_arabic' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_arabic.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_centeuro: None -> <PyModule 'encodings.mac_centeuro' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_centeuro.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_croatian: None -> <PyModule 'encodings.mac_croatian' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_croatian.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_cyrillic: None -> <PyModule 'encodings.mac_cyrillic' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_cyrillic.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_farsi: None -> <PyModule 'encodings.mac_farsi' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_farsi.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_greek: None -> <PyModule 'encodings.mac_greek' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_greek.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_iceland: None -> <PyModule 'encodings.mac_iceland' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_iceland.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_latin2: None -> <PyModule 'encodings.mac_latin2' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_latin2.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_roman: None -> <PyModule 'encodings.mac_roman' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_roman.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_romanian: None -> <PyModule 'encodings.mac_romanian' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_romanian.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_turkish: None -> <PyModule 'encodings.mac_turkish' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mac_turkish.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mbcs: None -> <PyModule 'encodings.mbcs' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\mbcs.pyc imports=[('codecs.mbcs_decode', 0, 0, -1), ('codecs', 0, 0, -1), ('codecs.mbcs_encode', 0, 0, -1)] binaries=[] datas=[]>
encodings.palmos: None -> <PyModule 'encodings.palmos' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\palmos.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.ptcp154: None -> <PyModule 'encodings.ptcp154' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\ptcp154.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.punycode: None -> <PyModule 'encodings.punycode' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\punycode.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.quopri_codec: None -> <PyModule 'encodings.quopri_codec' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\quopri_codec.pyc imports=[('quopri', 0, 0, -1), ('cStringIO', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.raw_unicode_escape: None -> <PyModule 'encodings.raw_unicode_escape' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\raw_unicode_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.rot_13: None -> <PyModule 'encodings.rot_13' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\rot_13.pyc imports=[('sys', 0, 1, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jis: None -> <PyModule 'encodings.shift_jis' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\shift_jis.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jisx0213: None -> <PyModule 'encodings.shift_jisx0213' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\shift_jisx0213.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jis_2004: None -> <PyModule 'encodings.shift_jis_2004' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\shift_jis_2004.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.string_escape: None -> <PyModule 'encodings.string_escape' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\string_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.tis_620: None -> <PyModule 'encodings.tis_620' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\tis_620.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.undefined: None -> <PyModule 'encodings.undefined' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\undefined.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.unicode_escape: None -> <PyModule 'encodings.unicode_escape' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\unicode_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.unicode_internal: None -> <PyModule 'encodings.unicode_internal' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\unicode_internal.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16: None -> <PyModule 'encodings.utf_16' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_16.pyc imports=[('codecs', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16_be: None -> <PyModule 'encodings.utf_16_be' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_16_be.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16_le: None -> <PyModule 'encodings.utf_16_le' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_16_le.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32: None -> <PyModule 'encodings.utf_32' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_32.pyc imports=[('codecs', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32_be: None -> <PyModule 'encodings.utf_32_be' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_32_be.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32_le: None -> <PyModule 'encodings.utf_32_le' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_32_le.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_7: None -> <PyModule 'encodings.utf_7' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_7.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_8: None -> <PyModule 'encodings.utf_8' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_8_sig: None -> <PyModule 'encodings.utf_8_sig' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\utf_8_sig.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.uu_codec: None -> <PyModule 'encodings.uu_codec' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\uu_codec.pyc imports=[('cStringIO.StringIO', 1, 0, -1), ('binascii.a2b_uu', 1, 0, -1), ('binascii', 1, 0, -1), ('binascii.b2a_uu', 1, 0, -1), ('binascii', 0, 0, -1), ('codecs', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
encodings.zlib_codec: None -> <PyModule 'encodings.zlib_codec' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\encodings\zlib_codec.pyc imports=[('zlib', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
_codecs: None -> <BuiltinModule '_codecs' None imports=[] binaries=[] datas=[]>
encodings.base64: None -> None
base64: None -> <PyModule 'base64' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\base64.pyc imports=[('sys', 1, 0, -1), ('binascii', 0, 0, -1), ('re', 0, 0, -1), ('struct', 0, 0, -1), ('getopt', 1, 0, -1)] binaries=[] datas=[]>
binascii: None -> <BuiltinModule 'binascii' None imports=[] binaries=[] datas=[]>
getopt: None -> <PyModule 'getopt' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\getopt.pyc imports=[('sys', 0, 1, -1), ('os', 0, 0, -1)] binaries=[] datas=[]>
_struct: None -> <BuiltinModule '_struct' None imports=[] binaries=[] datas=[]>
encodings._codecs_tw: None -> None
_codecs_tw: None -> <BuiltinModule '_codecs_tw' None imports=[] binaries=[] datas=[]>
encodings._multibytecodec: None -> None
_multibytecodec: None -> <BuiltinModule '_multibytecodec' None imports=[] binaries=[] datas=[]>
encodings._codecs_hk: None -> None
_codecs_hk: None -> <BuiltinModule '_codecs_hk' None imports=[] binaries=[] datas=[]>
encodings.bz2: None -> None
bz2: None -> <ExtensionModule 'bz2' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\bz2.pyd imports=[] binaries=[] datas=[]>
encodings._codecs_jp: None -> None
_codecs_jp: None -> <BuiltinModule '_codecs_jp' None imports=[] binaries=[] datas=[]>
encodings._codecs_kr: None -> None
_codecs_kr: None -> <BuiltinModule '_codecs_kr' None imports=[] binaries=[] datas=[]>
encodings._codecs_cn: None -> None
_codecs_cn: None -> <BuiltinModule '_codecs_cn' None imports=[] binaries=[] datas=[]>
encodings.binascii: None -> None
encodings.unicodedata: None -> None
unicodedata: None -> <ExtensionModule 'unicodedata' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\unicodedata.pyd imports=[] binaries=[] datas=[]>
encodings.re: None -> None
encodings.stringprep: None -> None
stringprep: None -> <PyModule 'stringprep' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\stringprep.pyc imports=[('unicodedata', 0, 0, -1), ('unicodedata.ucd_3_2_0', 0, 0, -1)] binaries=[] datas=[]>
encodings._codecs_iso2022: None -> None
_codecs_iso2022: None -> <BuiltinModule '_codecs_iso2022' None imports=[] binaries=[] datas=[]>
encodings.quopri: None -> None
quopri: None -> <PyModule 'quopri' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\quopri.pyc imports=[('cStringIO.StringIO', 1, 0, -1), ('getopt', 1, 0, -1), ('binascii.a2b_qp', 0, 0, -1), ('binascii.b2a_qp', 0, 0, -1), ('sys', 1, 0, -1), ('binascii', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
encodings.cStringIO: None -> None
encodings.StringIO: None -> None
encodings.sys: None -> None
encodings.zlib: None -> None
zlib: None -> <BuiltinModule 'zlib' None imports=[] binaries=[] datas=[]>
weakref: None -> <PyModule 'weakref' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\weakref.pyc imports=[('_weakrefset', 0, 0, -1), ('_weakref.ProxyType', 0, 0, -1), ('exceptions.ReferenceError', 0, 0, -1), ('_weakref.getweakrefcount', 0, 0, -1), ('copy.deepcopy', 1, 0, -1), ('_weakref.ref', 0, 0, -1), ('_weakref.ReferenceType', 0, 0, -1), ('exceptions', 0, 0, -1), ('_weakref.getweakrefs', 0, 0, -1), ('_weakref.CallableProxyType', 0, 0, -1), ('copy', 1, 0, -1), ('_weakrefset.WeakSet', 0, 0, -1), ('UserDict', 0, 0, -1), ('_weakref', 0, 0, -1), ('_weakref.proxy', 0, 0, -1)] binaries=[] datas=[]>
org: None -> None
  DEL org
org: None -> None
  DEL org
exceptions: None -> <BuiltinModule 'exceptions' None imports=[] binaries=[] datas=[]>
readline: None -> None
  DEL readline
dis: None -> <PyModule 'dis' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\dis.pyc imports=[('opcode', 0, 0, -1), ('opcode.*', 0, 0, -1), ('opcode.__all__', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
imp: None -> <BuiltinModule 'imp' None imports=[] binaries=[] datas=[]>
opcode: None -> <PyModule 'opcode' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\opcode.pyc imports=[] binaries=[] datas=[]>
_heapq: None -> <BuiltinModule '_heapq' None imports=[] binaries=[] datas=[]>
unittest.loader: None -> <PyModule 'unittest.loader' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\loader.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('fnmatch.fnmatch', 0, 0, -1), ('fnmatch', 0, 0, -1), ('functools.cmp_to_key', 0, 0, -1), ('suite', 0, 0, 1), ('traceback', 0, 0, -1), ('case', 0, 0, 1), ('functools', 0, 0, -1), ('', 0, 0, 1)] binaries=[] datas=[]>
unittest.result: None -> <PyModule 'unittest.result' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\result.pyc imports=[('functools.wraps', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('StringIO.StringIO', 0, 0, -1), ('StringIO', 0, 0, -1), ('traceback', 0, 0, -1), ('util', 0, 0, 1), ('functools', 0, 0, -1), ('', 0, 0, 1)] binaries=[] datas=[]>
unittest.case: None -> <PyModule 'unittest.case' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\case.pyc imports=[('util._count_diff_hashable', 0, 0, 1), ('collections', 0, 0, -1), ('re', 0, 0, -1), ('util._count_diff_all_purpose', 0, 0, 1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('', 0, 0, 1), ('warnings', 0, 0, -1), ('util.safe_repr', 0, 0, 1), ('util.unorderable_list_difference', 0, 0, 1), ('difflib', 0, 0, -1), ('util.strclass', 0, 0, 1), ('pprint', 0, 0, -1), ('result', 0, 0, 1), ('util', 0, 0, 1), ('functools', 0, 0, -1)] binaries=[] datas=[]>
unittest.main: None -> <PyModule 'unittest.main' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\main.pyc imports=[('runner', 0, 0, 1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('', 0, 0, 1), ('loader', 0, 0, 1), ('optparse', 1, 0, -1), ('getopt', 1, 0, -1), ('signals.installHandler', 0, 0, 1), ('signals', 0, 0, 1)] binaries=[] datas=[]>
unittest.signals: None -> <PyModule 'unittest.signals' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\signals.pyc imports=[('functools', 0, 0, -1), ('functools.wraps', 0, 0, -1), ('signal', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
unittest.suite: None -> <PyModule 'unittest.suite' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\suite.pyc imports=[('util', 0, 0, 1), ('case', 0, 0, 1), ('', 0, 0, 1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
unittest.runner: None -> <PyModule 'unittest.runner' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\runner.pyc imports=[('result', 0, 0, 1), ('sys', 0, 0, -1), ('', 0, 0, 1), ('signals', 0, 0, 1), ('time', 0, 0, -1), ('signals.registerResult', 0, 0, 1)] binaries=[] datas=[]>
unittest.re: None -> None
unittest.sys: None -> None
unittest.types: None -> None
unittest.os: None -> None
unittest.fnmatch: None -> None
unittest.functools: None -> None
unittest.traceback: None -> None
unittest.util: None -> <PyModule 'unittest.util' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\unittest\util.pyc imports=[('collections', 0, 0, -1), ('collections.namedtuple', 0, 0, -1), ('collections.OrderedDict', 0, 0, -1)] binaries=[] datas=[]>
unittest.collections: None -> None
unittest.warnings: None -> None
unittest.difflib: None -> None
unittest.pprint: None -> None
unittest.StringIO: None -> None
unittest.optparse: None -> None
unittest.getopt: None -> None
unittest.time: None -> None
unittest.signal: None -> None
unittest.weakref: None -> None
fcntl: None -> None
  DEL fcntl
io: None -> <PyModule 'io' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\io.pyc imports=[('_io.BytesIO', 0, 0, -1), ('_io.BufferedRWPair', 0, 0, -1), ('_io.FileIO', 0, 0, -1), ('_io', 0, 0, -1), ('_io.IncrementalNewlineDecoder', 0, 0, -1), ('_io.UnsupportedOperation', 0, 0, -1), ('_io.BufferedWriter', 0, 0, -1), ('abc', 0, 0, -1), ('_io.open', 0, 0, -1), ('_io.TextIOWrapper', 0, 0, -1), ('_io.BufferedRandom', 0, 0, -1), ('_io.DEFAULT_BUFFER_SIZE', 0, 0, -1), ('_io.BlockingIOError', 0, 0, -1), ('_io.BufferedReader', 0, 0, -1), ('_io.StringIO', 0, 0, -1)] binaries=[] datas=[]>
hashlib: None -> <PyModule 'hashlib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\hashlib.pyc imports=[('_sha256', 1, 1, -1), ('logging', 0, 1, -1), ('_sha512', 1, 1, -1), ('_sha', 1, 1, -1), ('_md5', 1, 1, -1), ('_hashlib', 0, 0, -1)] binaries=[] datas=[]>
math: None -> <BuiltinModule 'math' None imports=[] binaries=[] datas=[]>
_random: None -> <BuiltinModule '_random' None imports=[] binaries=[] datas=[]>
_sha256: None -> <BuiltinModule '_sha256' None imports=[] binaries=[] datas=[]>
logging: None -> <PkgModule 'logging' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\logging\__init__.pyc imports=[('threading', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('atexit', 0, 0, -1), ('thread', 0, 0, -1), ('cStringIO', 0, 0, -1), ('traceback', 0, 0, -1), ('codecs', 0, 0, -1), ('time', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
_sha512: None -> <BuiltinModule '_sha512' None imports=[] binaries=[] datas=[]>
_sha: None -> <BuiltinModule '_sha' None imports=[] binaries=[] datas=[]>
_md5: None -> <BuiltinModule '_md5' None imports=[] binaries=[] datas=[]>
_hashlib: None -> <ExtensionModule '_hashlib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\_hashlib.pyd imports=[] binaries=[] datas=[]>
logging.threading: None -> None
logging.sys: None -> None
logging.os: None -> None
logging.warnings: None -> None
logging.atexit: None -> None
atexit: None -> <PyModule 'atexit' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\atexit.pyc imports=[('traceback', 1, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
logging.thread: None -> None
logging.cStringIO: None -> None
logging.traceback: None -> None
logging.codecs: None -> None
logging.time: None -> None
logging.weakref: None -> None
_io: None -> <BuiltinModule '_io' None imports=[] binaries=[] datas=[]>
marshal: None -> <BuiltinModule 'marshal' None imports=[] binaries=[] datas=[]>
org: None -> None
  DEL org
org: None -> None
  DEL org
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
pydoc: None -> <PyModule 'pydoc' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\pydoc.pyc imports=[('collections.deque', 0, 0, -1), ('string.rfind', 0, 0, -1), ('tty', 1, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('pkgutil', 0, 0, -1), ('string.rstrip', 0, 0, -1), ('getopt', 1, 0, -1), ('pydoc_data.topics', 1, 0, -1), ('string.find', 0, 0, -1), ('traceback.extract_tb', 0, 0, -1), ('sys', 0, 0, -1), ('formatter', 1, 1, -1), ('string.join', 0, 0, -1), ('string', 0, 0, -1), ('webbrowser', 1, 0, -1), ('repr', 0, 0, -1), ('string.expandtabs', 0, 0, -1), ('BaseHTTPServer', 1, 0, -1), ('collections', 0, 0, -1), ('string.split', 0, 0, -1), ('types', 0, 0, -1), ('StringIO', 1, 1, -1), ('repr.Repr', 0, 0, -1), ('string.strip', 0, 0, -1), ('re', 0, 0, -1), ('threading', 1, 0, -1), ('tempfile', 1, 0, -1), ('string.lower', 0, 0, -1), ('inspect', 0, 0, -1), ('select', 1, 0, -1), ('nturl2path', 1, 1, -1), ('imp', 0, 0, -1), ('mimetools', 1, 0, -1), ('__builtin__', 0, 0, -1), ('traceback', 0, 0, -1)] binaries=[] datas=[]>
tty: None -> <PyModule 'tty' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\tty.pyc imports=[('termios.*', 0, 0, -1), ('termios', 0, 0, -1)] binaries=[] datas=[]>
pkgutil: None -> <PyModule 'pkgutil' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\pkgutil.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('os.path', 0, 0, -1), ('zipimport.zipimporter', 0, 0, -1), ('zipimport', 0, 0, -1), ('marshal', 1, 0, -1), ('types.ModuleType', 0, 0, -1), ('inspect', 1, 0, -1)] binaries=[] datas=[]>
pydoc_data: None -> <PkgModule 'pydoc_data' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\pydoc_data\__init__.pyc imports=[] binaries=[] datas=[]>
pydoc_data.topics: None -> <PyModule 'pydoc_data.topics' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\pydoc_data\topics.pyc imports=[] binaries=[] datas=[]>
formatter: None -> <PyModule 'formatter' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\formatter.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
webbrowser: None -> <PyModule 'webbrowser' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\webbrowser.pyc imports=[('sys', 0, 0, -1), ('copy', 1, 1, -1), ('os', 0, 0, -1), ('glob', 1, 0, -1), ('tempfile', 1, 0, -1), ('stat', 0, 0, -1), ('subprocess', 0, 0, -1), ('pwd', 1, 0, -1), ('getopt', 1, 0, -1), ('socket', 1, 0, -1), ('time', 0, 0, -1), ('shlex', 0, 0, -1)] binaries=[] datas=[]>
BaseHTTPServer: None -> <PyModule 'BaseHTTPServer' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\BaseHTTPServer.pyc imports=[('sys', 0, 0, -1), ('warnings', 0, 0, -1), ('socket', 0, 0, -1), ('SocketServer', 0, 0, -1), ('warnings.catch_warnings', 0, 0, -1), ('mimetools', 0, 0, -1), ('warnings.filterwarnings', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
nturl2path: None -> <PyModule 'nturl2path' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\nturl2path.pyc imports=[('urllib', 1, 0, -1), ('string', 1, 0, -1)] binaries=[] datas=[]>
mimetools: None -> <PyModule 'mimetools' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\mimetools.pyc imports=[('warnings.warnpy3k', 0, 0, -1), ('sys', 0, 0, -1), ('uu', 1, 1, -1), ('os', 0, 0, -1), ('rfc822', 0, 0, -1), ('quopri', 1, 1, -1), ('warnings', 0, 0, -1), ('dummy_thread', 0, 1, -1), ('socket', 1, 1, -1), ('thread', 0, 0, -1), ('warnings.catch_warnings', 0, 0, -1), ('time', 1, 0, -1), ('base64', 1, 1, -1), ('warnings.filterwarnings', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
termios: None -> None
  DEL termios
termios: None -> None
  DEL termios
zipimport: None -> <BuiltinModule 'zipimport' None imports=[] binaries=[] datas=[]>
glob: None -> <PyModule 'glob' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\glob.pyc imports=[('os', 0, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('fnmatch', 0, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
socket: None -> <PyModule 'socket' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\socket.pyc imports=[('_ssl.SSL_ERROR_EOF', 0, 1, -1), ('functools.partial', 0, 0, -1), ('_ssl.RAND_add', 0, 1, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('_ssl.RAND_egd', 0, 1, -1), ('_ssl', 0, 1, -1), ('sys', 0, 0, -1), ('ssl', 1, 0, -1), ('cStringIO', 0, 0, -1), ('_ssl.SSL_ERROR_INVALID_ERROR_CODE', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_X509_LOOKUP', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_CONNECT', 0, 1, -1), ('_ssl.SSL_ERROR_SYSCALL', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_WRITE', 0, 1, -1), ('_socket.*', 0, 0, -1), ('types', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_READ', 0, 1, -1), ('_ssl', 0, 0, -1), ('_socket', 0, 0, -1), ('_ssl.RAND_status', 0, 1, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('errno', 0, 0, -1), ('_ssl.SSL_ERROR_SSL', 0, 1, -1), ('_ssl.SSL_ERROR_ZERO_RETURN', 0, 1, -1), ('functools', 0, 0, -1), ('types.MethodType', 0, 0, -1), ('_ssl.SSLError', 0, 1, -1), ('StringIO', 0, 1, -1)] binaries=[] datas=[]>
_ssl: None -> <ExtensionModule '_ssl' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\_ssl.pyd imports=[] binaries=[] datas=[]>
ssl: None -> <PyModule 'ssl' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ssl.pyc imports=[('_ssl.OPENSSL_VERSION', 0, 0, -1), ('_ssl.SSL_ERROR_INVALID_ERROR_CODE', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_X509_LOOKUP', 0, 0, -1), ('_ssl.RAND_status', 0, 0, -1), ('_ssl.SSL_ERROR_SYSCALL', 0, 0, -1), ('socket._fileobject', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_WRITE', 0, 0, -1), ('_ssl.SSL_ERROR_SSL', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_READ', 0, 0, -1), ('_ssl.OPENSSL_VERSION_INFO', 0, 0, -1), ('_ssl.PROTOCOL_TLSv1', 0, 0, -1), ('_ssl.PROTOCOL_SSLv3', 0, 0, -1), ('_ssl.SSL_ERROR_ZERO_RETURN', 0, 0, -1), ('_ssl.SSL_ERROR_EOF', 0, 0, -1), ('_ssl.RAND_add', 0, 0, -1), ('_ssl.OPENSSL_VERSION_NUMBER', 0, 0, -1), ('_ssl.CERT_REQUIRED', 0, 0, -1), ('_ssl.SSLError', 0, 0, -1), ('textwrap', 0, 0, -1), ('socket.error', 0, 0, -1), ('socket', 0, 0, -1), ('_ssl', 0, 0, -1), ('base64', 0, 0, -1), ('_ssl.PROTOCOL_SSLv23', 0, 0, -1), ('errno', 0, 0, -1), ('_ssl.RAND_egd', 0, 0, -1), ('_ssl.CERT_OPTIONAL', 0, 0, -1), ('_ssl.CERT_NONE', 0, 0, -1), ('socket._delegate_methods', 0, 0, -1), ('time', 1, 0, -1), ('socket.socket', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_CONNECT', 0, 0, -1), ('socket.getnameinfo', 0, 0, -1), ('_ssl.PROTOCOL_SSLv2', 0, 0, -1)] binaries=[] datas=[]>
_socket: None -> <ExtensionModule '_socket' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\_socket.pyd imports=[] binaries=[] datas=[]>
SocketServer: None -> <PyModule 'SocketServer' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\SocketServer.pyc imports=[('threading', 0, 0, -1), ('sys', 0, 0, -1), ('select', 0, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('StringIO.StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('socket', 0, 0, -1), ('errno', 0, 0, -1), ('cStringIO', 1, 0, -1), ('dummy_threading', 0, 1, -1), ('traceback', 1, 0, -1)] binaries=[] datas=[]>
dummy_threading: None -> <PyModule 'dummy_threading' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\dummy_threading.pyc imports=[('dummy_thread', 0, 0, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('_dummy_threading', 0, 0, -1), ('_dummy_threading.__all__', 0, 0, -1), ('_dummy_threading.*', 0, 0, -1), ('sys.modules', 0, 0, -1)] binaries=[] datas=[]>
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
uu: None -> <PyModule 'uu' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\uu.pyc imports=[('optparse', 1, 0, -1), ('binascii', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1)] binaries=[] datas=[]>
rfc822: None -> <PyModule 'rfc822' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\rfc822.pyc imports=[('sys', 0, 1, -1), ('warnings', 0, 0, -1), ('warnings.warnpy3k', 0, 0, -1), ('time', 0, 0, -1), ('os', 0, 1, -1)] binaries=[] datas=[]>
urllib: None -> <PyModule 'urllib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\urllib.pyc imports=[('ssl', 0, 0, -1), ('cStringIO.StringIO', 1, 0, -1), ('os', 0, 0, -1), ('email.utils', 1, 0, -1), ('StringIO', 1, 1, -1), ('nturl2path.url2pathname', 0, 1, -1), ('re', 1, 0, -1), ('cStringIO', 1, 1, -1), ('_scproxy._get_proxy_settings', 0, 1, -1), ('tempfile', 1, 1, -1), ('ftplib', 1, 0, -1), ('fnmatch', 1, 0, -1), ('re', 1, 1, -1), ('sys', 0, 0, -1), ('_scproxy', 0, 1, -1), ('mimetools', 1, 0, -1), ('warnings.warnpy3k', 1, 0, -1), ('string', 0, 0, -1), ('cStringIO.StringIO', 1, 1, -1), ('nturl2path.pathname2url', 0, 1, -1), ('warnings', 1, 0, -1), ('time', 0, 0, -1), ('_scproxy._get_proxies', 0, 1, -1), ('rourl2path.pathname2url', 0, 1, -1), ('urlparse', 0, 0, -1), ('mimetypes', 1, 0, -1), ('rourl2path', 0, 1, -1), ('socket', 0, 0, -1), ('base64', 0, 0, -1), ('ftplib', 1, 1, -1), ('getpass', 1, 0, -1), ('cStringIO', 1, 0, -1), ('re', 0, 0, -1), ('httplib', 1, 0, -1), ('urlparse.urljoin', 0, 0, -1), ('rourl2path.url2pathname', 0, 1, -1), ('nturl2path', 0, 1, -1), ('_winreg', 1, 0, -1), ('mimetools', 1, 1, -1), ('fnmatch.fnmatch', 1, 0, -1), ('socket', 1, 0, -1), ('StringIO.StringIO', 1, 1, -1)] binaries=[] datas=[]>
email: None -> <PkgModule 'email' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\__init__.pyc imports=[('email.mime', 0, 0, -1), ('email.parser.Parser', 1, 0, -1), ('sys', 0, 0, -1), ('email.parser', 1, 0, -1), ('email.charset', 0, 0, -1), ('email.encoders', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.feedparser', 0, 0, -1), ('email.generator', 0, 0, -1), ('email.header', 0, 0, -1), ('email.iterators', 0, 0, -1), ('email.message', 0, 0, -1), ('email.parser', 0, 0, -1), ('email.utils', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email.mime.audio', 0, 0, -1), ('email.mime.base', 0, 0, -1), ('email.mime.image', 0, 0, -1), ('email.mime.message', 0, 0, -1), ('email.mime.multipart', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email.mime.text', 0, 0, -1)] binaries=[] datas=[]>
email.utils: None -> <PyModule 'email.utils' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\utils.pyc imports=[('email._parseaddr', 0, 0, -1), ('email.encoders', 0, 0, -1), ('re', 0, 0, -1), ('email._parseaddr.parsedate', 0, 0, -1), ('email._parseaddr.parsedate_tz', 0, 0, -1), ('email._parseaddr.quote', 0, 0, -1), ('os', 0, 0, -1), ('urllib', 1, 0, -1), ('email._parseaddr.mktime_tz', 0, 0, -1), ('warnings', 0, 0, -1), ('quopri.decodestring', 0, 0, -1), ('socket', 0, 0, -1), ('email.encoders._qencode', 0, 0, -1), ('random', 0, 0, -1), ('urllib', 0, 0, -1), ('base64', 0, 0, -1), ('email.encoders._bencode', 0, 0, -1), ('time', 0, 0, -1), ('quopri', 0, 0, -1), ('email._parseaddr.AddressList', 0, 0, -1)] binaries=[] datas=[]>
_scproxy: None -> None
  DEL _scproxy
ftplib: None -> <PyModule 'ftplib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ftplib.pyc imports=[('ssl', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('re', 1, 1, -1), ('socket', 0, 0, -1), ('socket._GLOBAL_DEFAULT_TIMEOUT', 0, 0, -1), ('SOCKS', 0, 0, -1), ('socket', 0, 1, -1), ('socket.getfqdn', 0, 0, -1)] binaries=[] datas=[]>
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
rourl2path: None -> None
  DEL rourl2path
urlparse: None -> <PyModule 'urlparse' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\urlparse.pyc imports=[('collections', 0, 0, -1), ('re', 0, 0, -1), ('collections.namedtuple', 0, 0, -1)] binaries=[] datas=[]>
mimetypes: None -> <PyModule 'mimetypes' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\mimetypes.pyc imports=[('_winreg', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('urllib', 0, 0, -1), ('posixpath', 0, 0, -1), ('getopt', 0, 1, -1)] binaries=[] datas=[]>
rourl2path: None -> None
  DEL rourl2path
getpass: None -> <PyModule 'getpass' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\getpass.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('EasyDialogs', 0, 1, -1), ('warnings', 0, 0, -1), ('EasyDialogs.AskPassword', 0, 1, -1), ('msvcrt', 1, 0, -1), ('msvcrt', 0, 1, -1), ('pwd', 1, 0, -1), ('termios', 0, 0, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
httplib: None -> <PyModule 'httplib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\httplib.pyc imports=[('sys.py3kwarning', 0, 0, -1), ('ssl', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('array', 0, 0, -1), ('warnings', 0, 0, -1), ('socket', 0, 0, -1), ('cStringIO', 0, 0, -1), ('mimetools', 0, 0, -1), ('array.array', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1), ('urlparse.urlsplit', 0, 0, -1), ('urlparse', 0, 0, -1), ('_ssl', 0, 0, -1), ('ssl', 0, 0, -1)] binaries=[] datas=[]>
rourl2path: None -> None
  DEL rourl2path
_winreg: None -> <BuiltinModule '_winreg' None imports=[] binaries=[] datas=[]>
email.email: None -> None
email.mime: None -> <PkgModule 'email.mime' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\mime\__init__.pyc imports=[] binaries=[] datas=[]>
email.parser: None -> <PyModule 'email.parser' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\parser.pyc imports=[('email.message', 0, 0, -1), ('warnings', 0, 0, -1), ('cStringIO', 0, 0, -1), ('email.feedparser', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('email.feedparser.FeedParser', 0, 0, -1), ('email.message.Message', 0, 0, -1)] binaries=[] datas=[]>
email.sys: None -> None
email.charset: None -> <PyModule 'email.charset' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\charset.pyc imports=[('email.encoders', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.encoders.encode_7or8bit', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
email.encoders: None -> <PyModule 'email.encoders' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\encoders.pyc imports=[('base64', 0, 0, -1), ('quopri.encodestring', 0, 0, -1), ('quopri', 0, 0, -1)] binaries=[] datas=[]>
email.errors: None -> <PyModule 'email.errors' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\errors.pyc imports=[] binaries=[] datas=[]>
email.feedparser: None -> <PyModule 'email.feedparser' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\feedparser.pyc imports=[('email.errors', 0, 0, -1), ('re', 0, 0, -1), ('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.generator: None -> <PyModule 'email.generator' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\generator.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('warnings', 0, 0, -1), ('email.header.Header', 0, 0, -1), ('email.header', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('random', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
email.header: None -> <PyModule 'email.header' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\header.pyc imports=[('re', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.charset.Charset', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.errors.HeaderParseError', 0, 0, -1), ('binascii', 0, 0, -1), ('email.charset', 0, 0, -1)] binaries=[] datas=[]>
email.iterators: None -> <PyModule 'email.iterators' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\iterators.pyc imports=[('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
email.message: None -> <PyModule 'email.message' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\message.pyc imports=[('re', 0, 0, -1), ('email.iterators', 1, 0, -1), ('email', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.iterators.walk', 1, 0, -1), ('warnings', 0, 0, -1), ('email.generator.Generator', 1, 0, -1), ('cStringIO', 0, 0, -1), ('email.utils', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('binascii', 0, 0, -1), ('email.charset', 0, 0, -1), ('uu', 0, 0, -1), ('email.generator', 1, 0, -1), ('email.iterators', 0, 0, -1), ('email.generator', 0, 0, -1)] binaries=[] datas=[]>
email.base64mime: None -> <PyModule 'email.base64mime' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\base64mime.pyc imports=[('email.utils.fix_eols', 0, 0, -1), ('binascii', 0, 0, -1), ('email.utils', 0, 0, -1), ('binascii.a2b_base64', 0, 0, -1), ('binascii.b2a_base64', 0, 0, -1)] binaries=[] datas=[]>
email.quoprimime: None -> <PyModule 'email.quoprimime' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\quoprimime.pyc imports=[('string.hexdigits', 0, 0, -1), ('re', 0, 0, -1), ('email.utils.fix_eols', 0, 0, -1), ('string', 0, 0, -1), ('email.utils', 0, 0, -1)] binaries=[] datas=[]>
email.mime.audio: None -> <PyModule 'email.mime.audio' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\mime\audio.pyc imports=[('email.encoders', 0, 0, -1), ('email', 0, 0, -1), ('sndhdr', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('cStringIO', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1)] binaries=[] datas=[]>
email.mime.base: None -> <PyModule 'email.mime.base' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\mime\base.pyc imports=[('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.mime.image: None -> <PyModule 'email.mime.image' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\mime\image.pyc imports=[('email.encoders', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('imghdr', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email', 0, 0, -1)] binaries=[] datas=[]>
email.mime.message: None -> <PyModule 'email.mime.message' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\mime\message.pyc imports=[('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.mime.multipart: None -> <PyModule 'email.mime.multipart' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\mime\multipart.pyc imports=[('email.mime.base', 0, 0, -1), ('email.mime.base.MIMEBase', 0, 0, -1)] binaries=[] datas=[]>
email.mime.nonmultipart: None -> <PyModule 'email.mime.nonmultipart' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\mime\nonmultipart.pyc imports=[('email.errors', 0, 0, -1), ('email.mime.base', 0, 0, -1), ('email.mime.base.MIMEBase', 0, 0, -1), ('email', 0, 0, -1)] binaries=[] datas=[]>
email.mime.text: None -> <PyModule 'email.mime.text' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\mime\text.pyc imports=[('email.encoders', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('email.encoders.encode_7or8bit', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1)] binaries=[] datas=[]>
email.warnings: None -> None
email.cStringIO: None -> None
email.re: None -> None
email.binascii: None -> None
email.uu: None -> None
email.random: None -> None
email.time: None -> None
email.string: None -> None
email._parseaddr: None -> <PyModule 'email._parseaddr' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\email\_parseaddr.pyc imports=[('calendar', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
email.os: None -> None
email.urllib: None -> None
email.quopri: None -> None
email.socket: None -> None
email.base64: None -> None
email.calendar: None -> None
email.codecs: None -> None
email.mime.email: None -> None
email.mime.sndhdr: None -> None
sndhdr: None -> <PyModule 'sndhdr' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\sndhdr.pyc imports=[('sys', 1, 0, -1), ('aifc', 1, 0, -1), ('glob', 1, 1, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
email.mime.cStringIO: None -> None
aifc: None -> <PyModule 'aifc' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\aifc.pyc imports=[('cl', 1, 1, -1), ('struct', 0, 0, -1), ('audioop', 1, 0, -1), ('chunk.Chunk', 0, 0, -1), ('__builtin__', 0, 0, -1), ('sys', 0, 1, -1), ('cl', 1, 0, -1), ('math', 1, 0, -1), ('chunk', 0, 0, -1), ('audioop', 1, 1, -1)] binaries=[] datas=[]>
cl: None -> None
  DEL cl
audioop: None -> <BuiltinModule 'audioop' None imports=[] binaries=[] datas=[]>
chunk: None -> <PyModule 'chunk' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\chunk.pyc imports=[('struct', 1, 0, -1)] binaries=[] datas=[]>
cl: None -> None
  DEL cl
email.mime.imghdr: None -> None
imghdr: None -> <PyModule 'imghdr' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\imghdr.pyc imports=[('sys', 1, 0, -1), ('glob', 1, 1, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
SOCKS: None -> None
  DEL SOCKS
EasyDialogs: None -> None
  DEL EasyDialogs
EasyDialogs: None -> None
  DEL EasyDialogs
pwd: None -> None
  DEL pwd
termios: None -> None
  DEL termios
__main__: <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\_pyi_bootstrap.py imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1), ('site', 0, 0, -1), ('pyi_importers', 0, 0, -1), ('warnings', 0, 1, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_importers.py imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
__main__: <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_importers.py imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_archive.py imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
__main__: <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_archive.py imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_carchive.py imports=[('zlib', 0, 0, -1), ('os.path', 1, 0, -1), ('pyi_archive', 0, 0, -1), ('sys', 0, 0, -1), ('struct', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
__main__: <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_carchive.py imports=[('zlib', 0, 0, -1), ('os.path', 1, 0, -1), ('pyi_archive', 0, 0, -1), ('sys', 0, 0, -1), ('struct', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_os_path.py imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
__main__: <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\build\pyinstaller-2.1\PyInstaller\loader\pyi_os_path.py imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\linked2safety.py imports=[('webstart', 0, 0, -1), ('sys', 0, 0, -1), ('libraries.transform', 0, 0, -1)] binaries=[] datas=[]>
webstart: None -> <PyModule 'webstart' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\webstart.pyc imports=[('webbrowser', 0, 0, -1), ('libraries.tray.SysTrayRunner', 1, 0, -1), ('tornado.ioloop', 0, 0, -1), ('sys', 0, 0, -1), ('tornado.web', 0, 0, -1), ('tornado.options', 0, 0, -1), ('os', 0, 0, -1), ('configs', 0, 0, -1), ('tornado.httpserver', 0, 0, -1), ('mappings', 0, 0, -1), ('tornado.options.options', 0, 0, -1), ('libraries.tray', 1, 0, -1), ('tornado.options.define', 0, 0, -1)] binaries=[] datas=[]>
libraries: None -> <PkgModule 'libraries' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\__init__.pyc imports=[] binaries=[] datas=[]>
libraries.transform: None -> <PyModule 'libraries.transform' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\transform.pyc imports=[('subprocess', 1, 0, -1), ('configs', 0, 0, -1), ('sys', 0, 0, -1), ('lxml.etree', 0, 0, -1), ('csv', 0, 0, -1), ('os', 0, 0, -1), ('getopt', 0, 0, -1), ('xlrd', 0, 0, -1), ('log', 1, 0, -1), ('uuid', 0, 0, -1), ('xls_utils', 0, 0, -1), ('lxml', 0, 0, -1), ('attributes.Attribute', 0, 0, -1), ('datetime', 0, 0, -1), ('log', 0, 0, -1), ('codecs', 0, 0, -1), ('owl_utils.OwlAttribute', 0, 0, -1), ('time', 0, 0, -1), ('attributes', 0, 0, -1), ('owl_utils', 0, 0, -1), ('xls_utils.XlsAttribute', 0, 0, -1)] binaries=[] datas=[]>
libraries.tray: None -> <PyModule 'libraries.tray' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\tray.pyc imports=[('webbrowser', 0, 0, -1), ('threading', 0, 0, -1), ('wx', 0, 0, -1), ('sys', 0, 0, -1), ('configs', 0, 0, -1), ('MessageBox', 0, 0, -1)] binaries=[] datas=[]>
tornado: None -> <PkgModule 'tornado' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\__init__.pyc imports=[('__future__.with_statement', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__', 0, 0, 0)] binaries=[] datas=[]>
tornado.ioloop: None -> <PyModule 'tornado.ioloop' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\ioloop.pyc imports=[('tornado.platform.auto.set_close_exec', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('heapq', 0, 0, 0), ('tornado.epoll', 0, 1, 0), ('sys', 0, 1, 0), ('datetime', 0, 0, 0), ('tornado', 0, 1, 0), ('errno', 0, 0, 0), ('tornado', 0, 0, 0), ('signal', 0, 0, 0), ('tornado.platform.auto.Waker', 0, 0, 0), ('time', 0, 0, 0), ('os', 0, 0, 0), ('select', 0, 0, 0), ('__future__.division', 0, 0, 0), ('tornado.stack_context', 0, 0, 0), ('threading', 0, 0, 0), ('logging', 0, 0, 0), ('__future__', 0, 0, 0), ('tornado.platform.auto', 0, 0, 0), ('thread', 0, 0, 0), ('traceback', 0, 0, 0)] binaries=[] datas=[]>
tornado.web: None -> <PyModule 'tornado.web' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\web.pyc imports=[('os.path', 0, 0, 0), ('urlparse', 0, 0, 0), ('Cookie', 0, 0, 0), ('types', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('functools', 0, 0, 0), ('tornado.util', 0, 0, 0), ('binascii', 0, 0, 0), ('hmac', 0, 0, 0), ('email.utils', 0, 0, 0), ('tornado.autoreload', 1, 1, 0), ('re', 0, 0, 0), ('tornado.util.b', 0, 0, 0), ('datetime', 0, 0, 0), ('sys', 0, 0, 0), ('itertools', 0, 0, 0), ('tornado', 0, 0, 0), ('urllib', 0, 0, 0), ('hashlib', 0, 0, 0), ('cStringIO', 0, 1, 0), ('time', 0, 0, 0), ('io.BytesIO', 0, 0, 0), ('base64', 0, 0, 0), ('httplib', 0, 0, 0), ('tornado', 1, 1, 0), ('__future__.division', 0, 0, 0), ('tornado.template', 0, 0, 0), ('io', 0, 0, 0), ('tornado.stack_context', 0, 0, 0), ('tornado.escape.utf8', 0, 0, 0), ('tornado.escape._unicode', 0, 0, 0), ('tornado.httpserver.HTTPServer', 1, 0, 0), ('tornado.escape', 0, 0, 0), ('threading', 0, 0, 0), ('mimetypes', 0, 0, 0), ('logging', 0, 0, 0), ('tornado.locale', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('uuid', 0, 0, 0), ('tornado.util.bytes_type', 0, 0, 0), ('tornado.util.raise_exc_info', 0, 0, 0), ('cStringIO.StringIO', 0, 1, 0), ('tornado.util.import_object', 0, 0, 0), ('tornado.httpserver', 1, 0, 0), ('tornado.util.ObjectDict', 0, 0, 0), ('gzip', 0, 0, 0), ('calendar', 0, 0, 0), ('traceback', 0, 0, 0), ('stat', 0, 0, 0)] binaries=[] datas=[]>
tornado.options: None -> <PyModule 'tornado.options' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\options.pyc imports=[('textwrap', 0, 0, 0), ('datetime', 0, 0, 0), ('logging.handlers', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('curses', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.escape._unicode', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('sys', 0, 0, 0), ('re', 0, 0, 0), ('tornado.escape', 0, 0, 0), ('logging', 0, 0, 0), ('time', 0, 0, 0), ('os', 0, 0, 0)] binaries=[] datas=[]>
configs: None -> <PyModule 'configs' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\configs.pyc imports=[('libraries.owl_utils.OwlCategory', 0, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('lxml.etree', 0, 0, -1), ('os', 0, 0, -1), ('types', 0, 0, -1), ('lxml', 0, 0, -1), ('glob', 0, 0, -1), ('codecs', 0, 0, -1), ('libraries.owl_utils', 0, 0, -1)] binaries=[] datas=[]>
tornado.httpserver: None -> <PyModule 'tornado.httpserver' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\httpserver.pyc imports=[('tornado.escape.parse_qs_bytes', 0, 0, 0), ('tornado.util.b', 0, 0, 0), ('tornado.iostream', 0, 0, 0), ('tornado.escape', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('Cookie', 0, 0, 0), ('socket', 0, 0, 0), ('tornado.httputil', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.stack_context', 0, 0, 0), ('tornado.util.bytes_type', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.netutil', 0, 0, 0), ('ssl', 0, 0, 0), ('tornado.util', 0, 0, 0), ('logging', 0, 0, 0), ('tornado.escape.native_str', 0, 0, 0), ('time', 0, 0, 0), ('tornado', 0, 0, 0), ('tornado.netutil.TCPServer', 0, 0, 0)] binaries=[] datas=[]>
mappings: None -> <PyModule 'mappings' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\mappings.pyc imports=[('handlers.home', 0, 0, -1), ('handlers.mapping', 0, 0, -1), ('handlers.browser', 0, 0, -1), ('handlers', 0, 0, -1), ('handlers.transform', 0, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
libraries.webbrowser: None -> None
libraries.threading: None -> None
libraries.wx: None -> None
wx: None -> <PkgModule 'wx' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\__init__.pyc imports=[('__version__', 0, 0, -1), ('wx._core', 0, 0, -1), ('wx._core.*', 0, 0, -1)] binaries=[] datas=[]>
libraries.sys: None -> None
libraries.configs: None -> None
libraries.MessageBox: None -> <PyModule 'libraries.MessageBox' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\MessageBox.pyc imports=[('wx', 0, 0, -1)] binaries=[] datas=[]>
wx.__version__: None -> <PyModule 'wx.__version__' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\__version__.pyc imports=[] binaries=[] datas=[]>
wx.wx: None -> None
wx._core: None -> <PyModule 'wx._core' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_core.pyc imports=[('__version__.*', 0, 0, -1), ('warnings', 0, 0, -1), ('locale', 0, 1, -1), ('types', 1, 0, -1), ('sys', 0, 0, -1), ('_controls', 0, 0, -1), ('_windows', 0, 0, -1), ('_windows.*', 0, 0, -1), ('_misc.*', 0, 0, -1), ('warnings', 1, 0, -1), ('signal', 1, 1, -1), ('_gdi', 0, 0, -1), ('atexit', 0, 0, -1), ('_controls.*', 0, 0, -1), ('types', 0, 0, -1), ('__version__', 0, 0, -1), ('_misc', 0, 0, -1), ('warnings', 0, 1, -1), ('_core_', 0, 0, -1), ('codecs', 0, 1, -1), ('new', 0, 0, -1), ('_gdi.*', 0, 0, -1)] binaries=[] datas=[]>
wx.warnings: None -> None
wx.locale: None -> None
wx.types: None -> None
wx.sys: None -> None
wx._controls: None -> <PyModule 'wx._controls' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_controls.pyc imports=[('new', 0, 0, -1), ('_controls_', 0, 0, -1), ('_core', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
wx._windows: None -> <PyModule 'wx._windows' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_windows.pyc imports=[('_windows_', 0, 0, -1), ('new', 0, 0, -1), ('_core', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
wx._misc: None -> <PyModule 'wx._misc' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_misc.pyc imports=[('new', 0, 0, -1), ('_core', 0, 0, -1), ('_misc_', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
wx.signal: None -> None
wx._gdi: None -> <PyModule 'wx._gdi' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_gdi.pyc imports=[('_gdi_', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('new', 0, 0, -1), ('_core', 0, 0, -1), ('wx', 1, 0, -1)] binaries=[] datas=[]>
wx.atexit: None -> None
wx._core_: None -> <ExtensionModule 'wx._core_' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_core_.pyd imports=[] binaries=[] datas=[]>
wx.codecs: None -> None
wx.new: None -> None
new: None -> <PyModule 'new' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\new.pyc imports=[('types.CodeType', 0, 0, -1), ('types.MethodType', 0, 0, -1), ('types', 0, 0, -1), ('types.InstanceType', 0, 0, -1), ('warnings', 0, 0, -1), ('types.FunctionType', 0, 0, -1), ('types.ModuleType', 0, 0, -1), ('warnings.warnpy3k', 0, 0, -1), ('types.ClassType', 0, 0, -1)] binaries=[] datas=[]>
wx._controls_: None -> <ExtensionModule 'wx._controls_' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_controls_.pyd imports=[] binaries=[] datas=[]>
wx._windows_: None -> <ExtensionModule 'wx._windows_' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_windows_.pyd imports=[] binaries=[] datas=[]>
wx._misc_: None -> <ExtensionModule 'wx._misc_' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_misc_.pyd imports=[] binaries=[] datas=[]>
wx._gdi_: None -> <ExtensionModule 'wx._gdi_' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\wx-3.0-msw\wx\_gdi_.pyd imports=[] binaries=[] datas=[]>
wx.os: None -> None
libraries.owl_utils: None -> <PyModule 'libraries.owl_utils' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\owl_utils.pyc imports=[('re', 0, 0, -1), ('lxml.etree', 0, 0, -1), ('os', 0, 0, -1), ('StringIO.StringIO', 0, 0, -1), ('configs', 0, 0, -1), ('StringIO', 0, 0, -1), ('log', 0, 0, -1), ('lxml', 0, 0, -1), ('attributes.Attribute', 0, 0, -1), ('sets.Set', 0, 0, -1), ('sets', 0, 0, -1), ('attributes', 0, 0, -1)] binaries=[] datas=[]>
lxml: None -> <PkgModule 'lxml' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\lxml-2.3-py2.7-win-amd64.egg\lxml\__init__.pyc imports=[] binaries=[] datas=[]>
lxml.etree: None -> <ExtensionModule 'lxml.etree' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\lxml-2.3-py2.7-win-amd64.egg\lxml\etree.pyd imports=[('_elementpath', 0, 0, -1), ('gzip', 0, 0, -1)] binaries=[] datas=[]>
libraries.re: None -> None
libraries.lxml: None -> None
libraries.os: None -> None
libraries.StringIO: None -> None
libraries.log: None -> <PyModule 'libraries.log' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\log.pyc imports=[('traceback', 0, 0, -1), ('os', 0, 0, -1), ('configs', 0, 0, -1), ('datetime', 0, 0, -1), ('pickle', 0, 0, -1)] binaries=[] datas=[]>
libraries.attributes: None -> <PyModule 'libraries.attributes' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\attributes.pyc imports=[('os', 0, 0, -1), ('uuid', 0, 0, -1)] binaries=[] datas=[]>
libraries.sets: None -> None
sets: None -> <PyModule 'sets' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\sets.pyc imports=[('itertools', 0, 0, -1), ('warnings', 0, 0, -1), ('itertools.ifilterfalse', 0, 0, -1), ('copy', 1, 0, -1), ('itertools.ifilter', 0, 0, -1), ('copy.deepcopy', 1, 0, -1)] binaries=[] datas=[]>
lxml._elementpath: None -> <PyModule 'lxml._elementpath' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\lxml-2.3-py2.7-win-amd64.egg\lxml\_elementpath.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
lxml.gzip: None -> None
gzip: None -> <PyModule 'gzip' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\gzip.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('struct', 0, 0, -1), ('__builtin__', 0, 0, -1), ('zlib', 0, 0, -1), ('warnings', 1, 0, -1), ('errno', 1, 1, -1), ('time', 0, 0, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
lxml.re: None -> None
libraries.traceback: None -> None
libraries.datetime: None -> None
libraries.pickle: None -> None
libraries.uuid: None -> None
uuid: None -> <PyModule 'uuid' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\uuid.pyc imports=[('ctypes', 0, 0, -1), ('hashlib.sha1', 1, 0, -1), ('sys', 0, 0, -1), ('hashlib', 1, 0, -1), ('os', 0, 1, -1), ('ctypes.util', 0, 0, -1), ('re', 1, 0, -1), ('win32wnet', 1, 0, -1), ('netbios', 1, 0, -1), ('ctypes', 1, 0, -1), ('random', 1, 1, -1), ('time', 1, 0, -1), ('sys', 1, 0, -1), ('hashlib.md5', 1, 0, -1), ('socket', 1, 0, -1), ('os', 1, 0, -1), ('random', 1, 0, -1)] binaries=[] datas=[]>
ctypes: None -> <PkgModule 'ctypes' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ctypes\__init__.pyc imports=[('_ctypes.set_errno', 0, 0, -1), ('_ctypes._cast_addr', 0, 0, -1), ('_ctypes.FUNCFLAG_USE_ERRNO', 0, 0, -1), ('_ctypes._memmove_addr', 0, 0, -1), ('os', 0, 0, -1), ('struct', 0, 0, -1), ('_ctypes.get_last_error', 0, 1, -1), ('ctypes._endian.BigEndianStructure', 0, 0, -1), ('_ctypes._memset_addr', 0, 0, -1), ('_ctypes._wstring_at_addr', 0, 0, -1), ('_ctypes.set_conversion_mode', 0, 0, -1), ('_ctypes.alignment', 0, 0, -1), ('sys', 0, 0, -1), ('_ctypes.Structure', 0, 0, -1), ('_ctypes._string_at_addr', 0, 0, -1), ('_ctypes._SimpleCData', 0, 1, -1), ('_ctypes.FUNCFLAG_USE_LASTERROR', 0, 0, -1), ('_ctypes.CFuncPtr', 0, 0, -1), ('_ctypes.Union', 0, 0, -1), ('struct.calcsize', 1, 0, -1), ('_ctypes', 0, 0, -1), ('_ctypes.ArgumentError', 0, 0, -1), ('_ctypes.dlopen', 0, 1, -1), ('struct', 1, 0, -1), ('_ctypes.RTLD_GLOBAL', 0, 0, -1), ('_ctypes.LoadLibrary', 0, 1, -1), ('_ctypes.get_errno', 0, 0, -1), ('_ctypes.resize', 0, 0, -1), ('_ctypes.POINTER', 0, 0, -1), ('_ctypes.set_last_error', 0, 1, -1), ('_ctypes.FUNCFLAG_CDECL', 0, 0, -1), ('_ctypes.FormatError', 0, 1, -1), ('_ctypes.pointer', 0, 0, -1), ('_ctypes.RTLD_LOCAL', 0, 0, -1), ('_ctypes._pointer_type_cache', 0, 0, -1), ('_ctypes._check_HRESULT', 0, 1, -1), ('_ctypes._SimpleCData', 0, 0, -1), ('struct.calcsize', 0, 0, -1), ('ctypes._endian.LittleEndianStructure', 0, 0, -1), ('_ctypes.FUNCFLAG_PYTHONAPI', 0, 0, -1), ('_ctypes.FUNCFLAG_STDCALL', 0, 1, -1), ('_ctypes', 0, 1, -1), ('ctypes._endian', 0, 0, -1), ('_ctypes.sizeof', 0, 0, -1), ('_ctypes.addressof', 0, 0, -1), ('_ctypes.__version__', 0, 0, -1), ('_ctypes._Pointer', 0, 0, -1), ('_ctypes.byref', 0, 0, -1), ('_ctypes.Array', 0, 0, -1)] binaries=[] datas=[]>
ctypes.util: None -> <PyModule 'ctypes.util' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ctypes\util.pyc imports=[('struct', 1, 0, -1), ('sys', 0, 0, -1), ('errno', 0, 1, -1), ('os', 0, 0, -1), ('ctypes.macholib.dyld', 0, 1, -1), ('re', 0, 1, -1), ('tempfile', 0, 1, -1), ('ctypes.macholib.dyld.dyld_find', 0, 1, -1), ('ctypes', 1, 0, -1), ('imp', 1, 0, -1), ('ctypes.cdll', 1, 0, -1)] binaries=[] datas=[]>
win32wnet: None -> <ExtensionModule 'win32wnet' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\win32\win32wnet.pyd imports=[] binaries=[] datas=[]>
netbios: None -> <PyModule 'netbios' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\win32\lib\netbios.pyc imports=[('sys', 0, 0, -1), ('struct', 0, 0, -1), ('win32wnet', 0, 0, -1)] binaries=[] datas=[]>
ctypes._ctypes: None -> None
_ctypes: None -> <ExtensionModule '_ctypes' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\_ctypes.pyd imports=[] binaries=[] datas=[]>
ctypes.os: None -> None
ctypes.struct: None -> None
ctypes.ctypes: None -> None
ctypes._endian: None -> <PyModule 'ctypes._endian' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ctypes\_endian.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
ctypes.sys: None -> None
ctypes.errno: None -> None
ctypes.macholib: None -> <PkgModule 'ctypes.macholib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ctypes\macholib\__init__.pyc imports=[] binaries=[] datas=[]>
ctypes.macholib.dyld: None -> <PyModule 'ctypes.macholib.dyld' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ctypes\macholib\dyld.pyc imports=[('framework', 0, 0, -1), ('itertools', 0, 0, -1), ('dylib.dylib_info', 0, 0, -1), ('os', 0, 0, -1), ('itertools.*', 0, 0, -1), ('dylib', 0, 0, -1), ('framework.framework_info', 0, 0, -1)] binaries=[] datas=[]>
ctypes.re: None -> None
ctypes.tempfile: None -> None
ctypes.imp: None -> None
ctypes.cdll: None -> None
  DEL ctypes.cdll
ctypes.macholib.framework: None -> <PyModule 'ctypes.macholib.framework' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ctypes\macholib\framework.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
ctypes.macholib.itertools: None -> None
ctypes.macholib.dylib: None -> <PyModule 'ctypes.macholib.dylib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ctypes\macholib\dylib.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
ctypes.macholib.os: None -> None
ctypes.macholib.re: None -> None
tornado.platform: None -> <PkgModule 'tornado.platform' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\platform\__init__.pyc imports=[] binaries=[] datas=[]>
tornado.platform.auto: None -> <PyModule 'tornado.platform.auto' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\platform\auto.pyc imports=[('tornado.platform.common.Waker', 0, 1, 0), ('tornado.platform.posix.Waker', 0, 1, 0), ('tornado.platform.common', 0, 1, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.platform.windows', 0, 1, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.platform.posix.set_close_exec', 0, 1, 0), ('tornado.platform.windows.set_close_exec', 0, 1, 0), ('tornado.platform.posix', 0, 1, 0), ('os', 0, 0, 0)] binaries=[] datas=[]>
tornado.epoll: None -> None
  DEL tornado.epoll
tornado.stack_context: None -> <PyModule 'tornado.stack_context' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\stack_context.pyc imports=[('sys', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('contextlib', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('functools', 0, 0, 0), ('tornado.util', 0, 0, 0), ('tornado.util.raise_exc_info', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('threading', 0, 0, 0), ('operator', 0, 0, 0), ('itertools', 0, 0, 0)] binaries=[] datas=[]>
tornado.platform.common: None -> <PyModule 'tornado.platform.common' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\platform\common.pyc imports=[('tornado.util.b', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('socket', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.platform.interface', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.util', 0, 0, 0), ('errno', 0, 0, 0), ('tornado.platform', 0, 0, 0)] binaries=[] datas=[]>
tornado.platform.posix: None -> <PyModule 'tornado.platform.posix' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\platform\posix.pyc imports=[('tornado.util.b', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.platform.interface', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('fcntl', 0, 0, 0), ('tornado.util', 0, 0, 0), ('tornado.platform', 0, 0, 0), ('os', 0, 0, 0)] binaries=[] datas=[]>
tornado.platform.windows: None -> <PyModule 'tornado.platform.windows' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\platform\windows.pyc imports=[('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('ctypes', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('ctypes.wintypes', 0, 0, 0)] binaries=[] datas=[]>
tornado.util: None -> <PyModule 'tornado.util' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\util.pyc imports=[('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('doctest', 1, 0, 0), ('zlib', 0, 0, 0)] binaries=[] datas=[]>
tornado.platform.interface: None -> <PyModule 'tornado.platform.interface' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\platform\interface.pyc imports=[('__future__.with_statement', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__', 0, 0, 0)] binaries=[] datas=[]>
fcntl: None -> None
  DEL fcntl
ctypes.wintypes: None -> <PyModule 'ctypes.wintypes' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\ctypes\wintypes.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('ctypes._SimpleCData', 0, 0, -1)] binaries=[] datas=[]>
ctypes._SimpleCData: None -> None
  DEL ctypes._SimpleCData
contextlib: None -> <PyModule 'contextlib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\contextlib.pyc imports=[('functools.wraps', 0, 0, -1), ('functools', 0, 0, -1), ('warnings', 0, 0, -1), ('sys', 0, 0, -1), ('warnings.warn', 0, 0, -1)] binaries=[] datas=[]>
Cookie: None -> <PyModule 'Cookie' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\Cookie.pyc imports=[('re', 0, 0, -1), ('cPickle.dumps', 0, 0, -1), ('time', 1, 0, -1), ('doctest', 1, 0, -1), ('warnings', 0, 0, -1), ('pickle.loads', 0, 1, -1), ('string', 0, 0, -1), ('cPickle', 0, 0, -1), ('Cookie', 1, 0, -1), ('cPickle.loads', 0, 0, -1), ('pickle.dumps', 0, 1, -1), ('time.time', 1, 0, -1), ('pickle', 0, 1, -1), ('time.gmtime', 1, 0, -1)] binaries=[] datas=[]>
hmac: None -> <PyModule 'hmac' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\hmac.pyc imports=[('hashlib', 1, 1, -1), ('warnings', 0, 0, -1)] binaries=[] datas=[]>
tornado.autoreload: None -> <PyModule 'tornado.autoreload' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\autoreload.pyc imports=[('types', 0, 0, 0), ('subprocess', 0, 0, 0), ('sys', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('pkgutil', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('functools', 0, 0, 0), ('signal', 0, 0, 0), ('tornado.process', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.ioloop', 0, 0, 0), ('runpy', 1, 1, 0), ('logging', 0, 0, 0), ('tornado', 0, 0, 0), ('os', 0, 0, 0)] binaries=[] datas=[]>
tornado.template: None -> <PyModule 'tornado.template' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\template.pyc imports=[('os.path', 0, 0, 0), ('datetime', 0, 0, 0), ('tornado', 0, 0, 0), ('cStringIO', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('posixpath', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.util.ObjectDict', 0, 0, 0), ('tornado.util', 0, 0, 0), ('tornado.util.bytes_type', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.escape', 0, 0, 0), ('linecache', 0, 0, 0), ('logging', 0, 0, 0), ('re', 0, 0, 0), ('threading', 0, 0, 0)] binaries=[] datas=[]>
tornado.escape: None -> <PyModule 'tornado.escape' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\escape.pyc imports=[('sys', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('urllib', 0, 0, 0), ('django.utils.simplejson', 0, 1, 0), ('__future__.absolute_import', 0, 0, 0), ('django.utils', 0, 1, 0), ('cgi', 0, 1, 0), ('htmlentitydefs', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('urlparse.parse_qs', 0, 0, 0), ('urlparse', 0, 0, 0), ('re', 0, 0, 0), ('json', 0, 0, 0), ('simplejson', 0, 1, 0), ('cgi.parse_qs', 0, 1, 0)] binaries=[] datas=[]>
tornado.locale: None -> <PyModule 'tornado.locale' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\locale.pyc imports=[('datetime', 0, 0, 0), ('tornado', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('gettext', 1, 0, 0), ('csv', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.escape', 0, 0, 0), ('re', 0, 0, 0), ('logging', 0, 0, 0), ('os', 0, 0, 0)] binaries=[] datas=[]>
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
SOCKS: None -> None
  DEL SOCKS
EasyDialogs: None -> None
  DEL EasyDialogs
EasyDialogs: None -> None
  DEL EasyDialogs
pwd: None -> None
  DEL pwd
termios: None -> None
  DEL termios
cl: None -> None
  DEL cl
cl: None -> None
  DEL cl
tornado.process: None -> <PyModule 'tornado.process' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\process.pyc imports=[('sys', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('binascii', 0, 0, 0), ('multiprocessing', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.ioloop', 0, 0, 0), ('random', 1, 0, 0), ('logging', 0, 0, 0), ('time', 0, 0, 0), ('errno', 0, 0, 0), ('tornado', 0, 0, 0), ('binascii.hexlify', 0, 0, 0), ('os', 0, 0, 0)] binaries=[] datas=[]>
runpy: None -> <PyModule 'runpy' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\runpy.pyc imports=[('pkgutil.get_loader', 0, 1, -1), ('imp.get_loader', 0, 0, -1), ('pkgutil.read_code', 0, 0, -1), ('sys', 0, 0, -1), ('imp', 0, 0, -1), ('pkgutil', 0, 0, -1), ('pkgutil', 0, 1, -1)] binaries=[] datas=[]>
multiprocessing: None -> <PkgModule 'multiprocessing' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\__init__.pyc imports=[('multiprocessing.util.SUBDEBUG', 0, 0, -1), ('multiprocessing.util.SUBWARNING', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.reduction', 1, 0, -1), ('multiprocessing', 1, 0, -1), ('multiprocessing.managers.SyncManager', 1, 0, -1), ('multiprocessing.sharedctypes.Array', 1, 0, -1), ('multiprocessing.synchronize.Event', 1, 0, -1), ('multiprocessing.managers', 1, 0, -1), ('multiprocessing.util', 1, 0, -1), ('sys', 0, 0, -1), ('multiprocessing.synchronize', 1, 0, -1), ('multiprocessing.forking', 1, 1, -1), ('multiprocessing.synchronize.Lock', 1, 0, -1), ('multiprocessing.synchronize.Semaphore', 1, 0, -1), ('multiprocessing.connection', 1, 0, -1), ('multiprocessing.pool', 1, 0, -1), ('multiprocessing.process.current_process', 0, 0, -1), ('multiprocessing.synchronize.Condition', 1, 0, -1), ('multiprocessing.queues', 1, 0, -1), ('multiprocessing.sharedctypes.RawArray', 1, 0, -1), ('_multiprocessing', 0, 0, -1), ('multiprocessing.connection.Pipe', 1, 0, -1), ('multiprocessing.synchronize.RLock', 1, 0, -1), ('multiprocessing.synchronize.BoundedSemaphore', 1, 0, -1), ('multiprocessing.sharedctypes.Value', 1, 0, -1), ('multiprocessing.util', 0, 0, -1), ('multiprocessing.sharedctypes.RawValue', 1, 0, -1), ('multiprocessing.queues.JoinableQueue', 1, 0, -1), ('multiprocessing.util.log_to_stderr', 1, 0, -1), ('multiprocessing.forking.freeze_support', 1, 1, -1), ('multiprocessing.process.Process', 0, 0, -1), ('multiprocessing.pool.Pool', 1, 0, -1), ('multiprocessing.forking.set_executable', 1, 0, -1), ('multiprocessing.process', 0, 0, -1), ('multiprocessing.util.get_logger', 1, 0, -1), ('multiprocessing.process.active_children', 0, 0, -1), ('multiprocessing.sharedctypes', 1, 0, -1), ('multiprocessing.forking', 1, 0, -1), ('multiprocessing.queues.Queue', 1, 0, -1)] binaries=[] datas=[]>
multiprocessing.multiprocessing: None -> None
multiprocessing.util: None -> <PyModule 'multiprocessing.util' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\util.pyc imports=[('atexit', 1, 0, -1), ('atexit', 0, 0, -1), ('itertools', 0, 0, -1), ('logging', 1, 0, -1), ('weakref', 0, 0, -1), ('shutil', 1, 1, -1), ('threading', 0, 0, -1), ('subprocess._args_from_interpreter_flags', 0, 0, -1), ('subprocess', 0, 0, -1), ('traceback', 1, 1, -1), ('multiprocessing.process.current_process', 0, 0, -1), ('multiprocessing.process.active_children', 0, 0, -1), ('tempfile', 1, 1, -1), ('multiprocessing.process', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.os: None -> None
multiprocessing.reduction: None -> <PyModule 'multiprocessing.reduction' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\reduction.pyc imports=[('_multiprocessing', 0, 1, -1), ('os', 0, 0, -1), ('multiprocessing.forking.close', 0, 0, -1), ('util.is_exiting', 1, 0, 1), ('_multiprocessing.win32', 0, 1, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('util', 1, 0, 1), ('multiprocessing.forking.Popen', 0, 0, -1), ('multiprocessing.connection.Listener', 0, 0, -1), ('_multiprocessing', 0, 0, -1), ('multiprocessing.current_process', 0, 0, -1), ('multiprocessing.forking.duplicate', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('socket', 0, 0, -1), ('_subprocess', 0, 1, -1), ('traceback', 1, 1, -1), ('multiprocessing.util.debug', 0, 0, -1), ('multiprocessing.connection', 0, 0, -1), ('util.sub_warning', 1, 0, 1), ('multiprocessing.util.sub_debug', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('multiprocessing.forking.ForkingPickler', 0, 0, -1), ('multiprocessing.util.register_after_fork', 0, 0, -1), ('multiprocessing.connection.Client', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.managers: None -> <PyModule 'multiprocessing.managers' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\managers.pyc imports=[('multiprocessing.util.Finalize', 0, 0, -1), ('multiprocessing.Process', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.forking.assert_spawning', 0, 0, -1), ('pickle.PicklingError', 0, 1, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing.forking.Popen', 0, 0, -1), ('cPickle.PicklingError', 0, 0, -1), ('pickle', 0, 1, -1), ('multiprocessing.current_process', 0, 0, -1), ('weakref', 0, 0, -1), ('multiprocessing.forking.exit', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('array', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('multiprocessing.util.info', 0, 0, -1), ('traceback', 1, 0, -1), ('multiprocessing.connection', 0, 0, -1), ('Queue', 0, 0, -1), ('multiprocessing.active_children', 0, 0, -1), ('multiprocessing.process', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('traceback.format_exc', 0, 0, -1), ('multiprocessing.forking.ForkingPickler', 0, 0, -1), ('cPickle', 0, 0, -1), ('traceback', 0, 0, -1), ('multiprocessing.process.AuthenticationString', 0, 0, -1), ('multiprocessing.Pool', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.sharedctypes: None -> <PyModule 'multiprocessing.sharedctypes' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\sharedctypes.pyc imports=[('ctypes', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('weakref', 0, 0, -1), ('multiprocessing.forking.ForkingPickler', 0, 0, -1), ('multiprocessing.forking.assert_spawning', 0, 0, -1), ('multiprocessing.heap', 0, 0, -1), ('multiprocessing.RLock', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.synchronize: None -> <PyModule 'multiprocessing.synchronize' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\synchronize.pyc imports=[('threading', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('time.time', 0, 0, -1), ('multiprocessing.forking.assert_spawning', 0, 0, -1), ('multiprocessing.forking.Popen', 0, 0, -1), ('multiprocessing.util.register_after_fork', 0, 0, -1), ('time.sleep', 0, 0, -1), ('multiprocessing.process.current_process', 0, 0, -1), ('_multiprocessing.SemLock', 0, 0, -1), ('_multiprocessing', 0, 0, -1), ('multiprocessing.util.debug', 0, 0, -1), ('time', 0, 0, -1), ('multiprocessing.util.Finalize', 0, 0, -1), ('multiprocessing.process', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.sys: None -> None
multiprocessing.forking: None -> <PyModule 'multiprocessing.forking' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\forking.pyc imports=[('thread', 0, 1, -1), ('functools.partial', 0, 0, -1), ('_multiprocessing', 0, 1, -1), ('os', 0, 0, -1), ('_multiprocessing.win32', 0, 1, -1), ('_multiprocessing.Connection', 0, 1, -1), ('pickle.HIGHEST_PROTOCOL', 0, 1, -1), ('signal', 0, 0, -1), ('pickle', 0, 0, -1), ('sys', 0, 0, -1), ('util', 1, 0, 1), ('util._logger', 1, 0, 1), ('time', 0, 1, -1), ('_multiprocessing.PipeConnection', 0, 1, -1), ('functools', 0, 0, -1), ('pickle', 0, 1, -1), ('imp', 1, 1, -1), ('util', 0, 1, 1), ('util._log_to_stderr', 1, 0, 1), ('multiprocessing.util', 0, 0, -1), ('util.Finalize', 0, 1, 1), ('_subprocess', 0, 1, -1), ('errno', 0, 0, -1), ('pickle.load', 0, 1, -1), ('pickle.Pickler', 0, 0, -1), ('multiprocessing.process', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('msvcrt', 0, 1, -1), ('random', 1, 1, -1)] binaries=[] datas=[]>
multiprocessing.connection: None -> <PyModule 'multiprocessing.connection' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\connection.pyc imports=[('multiprocessing.util.Finalize', 0, 0, -1), ('_multiprocessing', 0, 1, -1), ('os', 0, 0, -1), ('multiprocessing.forking.close', 0, 0, -1), ('hmac', 1, 0, -1), ('_multiprocessing.win32', 0, 1, -1), ('errno', 0, 0, -1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('_multiprocessing', 0, 0, -1), ('time', 0, 0, -1), ('multiprocessing.current_process', 0, 0, -1), ('multiprocessing.forking.duplicate', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('xmlrpclib', 1, 0, -1), ('multiprocessing.util', 0, 0, -1), ('socket', 0, 0, -1), ('multiprocessing.util.get_temp_dir', 0, 0, -1), ('multiprocessing.util.debug', 0, 0, -1), ('multiprocessing.util.sub_debug', 0, 0, -1), ('multiprocessing.AuthenticationError', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.pool: None -> <PyModule 'multiprocessing.pool' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\pool.pyc imports=[('dummy', 1, 0, 1), ('collections', 0, 0, -1), ('threading', 0, 0, -1), ('itertools', 0, 0, -1), ('Queue', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('queues.SimpleQueue', 1, 0, 1), ('dummy.Process', 1, 0, 1), ('multiprocessing.util', 0, 0, -1), ('multiprocessing.TimeoutError', 0, 0, -1), ('multiprocessing.cpu_count', 0, 0, -1), ('queues', 1, 0, 1), ('multiprocessing.util.debug', 0, 0, -1), ('time', 0, 0, -1), ('multiprocessing.util.Finalize', 0, 0, -1), ('multiprocessing.Process', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.process: None -> <PyModule 'multiprocessing.process' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\process.pyc imports=[('forking', 1, 1, 1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('util', 1, 0, 1), ('os', 0, 0, -1), ('forking.Popen', 1, 0, 1), ('forking', 1, 0, 1), ('forking.Popen', 1, 1, 1), ('', 1, 0, 1), ('traceback', 1, 1, -1), ('signal', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.queues: None -> <PyModule 'multiprocessing.queues' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\queues.pyc imports=[('multiprocessing.synchronize.Semaphore', 0, 0, -1), ('multiprocessing.util.Finalize', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.synchronize.Condition', 0, 0, -1), ('multiprocessing.forking.assert_spawning', 0, 0, -1), ('util.is_exiting', 1, 0, 1), ('multiprocessing.synchronize.BoundedSemaphore', 0, 0, -1), ('threading', 0, 0, -1), ('Queue.Full', 0, 0, -1), ('util', 1, 0, 1), ('_multiprocessing', 0, 0, -1), ('time', 0, 0, -1), ('multiprocessing.Pipe', 0, 0, -1), ('collections', 0, 0, -1), ('atexit', 0, 0, -1), ('weakref', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('multiprocessing.util.info', 0, 0, -1), ('traceback', 1, 1, -1), ('multiprocessing.util.debug', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('Queue.Empty', 0, 0, -1), ('multiprocessing.util.register_after_fork', 0, 0, -1), ('Queue', 0, 0, -1), ('multiprocessing.synchronize', 0, 0, -1), ('multiprocessing.synchronize.Lock', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing._multiprocessing: None -> None
_multiprocessing: None -> <ExtensionModule '_multiprocessing' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\_multiprocessing.pyd imports=[] binaries=[] datas=[]>
multiprocessing.atexit: None -> None
multiprocessing.itertools: None -> None
multiprocessing.logging: None -> None
multiprocessing.weakref: None -> None
multiprocessing.shutil: None -> None
shutil: None -> <PyModule 'shutil' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\shutil.pyc imports=[('collections', 0, 0, -1), ('distutils.spawn', 1, 0, -1), ('pwd', 0, 0, -1), ('sys', 0, 0, -1), ('os.path', 0, 0, -1), ('os', 0, 0, -1), ('distutils.errors', 1, 0, -1), ('tarfile', 1, 0, -1), ('fnmatch', 0, 0, -1), ('grp', 0, 0, -1), ('os.path.abspath', 0, 0, -1), ('stat', 0, 0, -1), ('grp.getgrnam', 0, 0, -1), ('pwd.getpwnam', 0, 0, -1), ('errno', 0, 0, -1), ('zipfile', 1, 0, -1), ('distutils.spawn.spawn', 1, 0, -1), ('distutils.errors.DistutilsExecError', 1, 0, -1)] binaries=[] datas=[]>
multiprocessing.threading: None -> None
multiprocessing.subprocess: None -> None
multiprocessing.traceback: None -> None
multiprocessing.tempfile: None -> None
distutils: None -> <PkgModule 'distutils' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\distutils\__init__.pyc imports=[] binaries=[] datas=[('include\\pyconfig.h', 'C:\\Data\\cristip\\work\\CNAS-SIUI\\L2S\\src\\trunk\\python_x64\\include\\pyconfig.h', 'DATA')]>
distutils.spawn: None -> <PyModule 'distutils.spawn' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\distutils\spawn.pyc imports=[('distutils', 0, 1, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('distutils', 0, 0, -1), ('distutils.errors.DistutilsExecError', 0, 0, -1), ('distutils.errors.DistutilsPlatformError', 0, 0, -1), ('distutils.sysconfig', 0, 1, -1), ('distutils.errors', 0, 0, -1), ('errno', 1, 1, -1), ('distutils.log', 0, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
distutils.errors: None -> <PyModule 'distutils.errors' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\distutils\errors.pyc imports=[] binaries=[] datas=[]>
tarfile: None -> <PyModule 'tarfile' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\tarfile.pyc imports=[('pwd', 0, 0, -1), ('cStringIO.StringIO', 1, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('struct', 0, 0, -1), ('grp', 0, 0, -1), ('calendar', 1, 0, -1), ('gzip', 1, 0, -1), ('sys', 0, 0, -1), ('shutil', 0, 0, -1), ('warnings', 1, 0, -1), ('bz2', 1, 0, -1), ('time', 0, 0, -1), ('warnings.warnpy3k', 1, 0, -1), ('zlib', 1, 1, -1), ('errno', 0, 0, -1), ('cStringIO', 1, 0, -1), ('re', 0, 0, -1), ('copy', 0, 0, -1), ('StringIO.StringIO', 1, 1, -1), ('warnings', 1, 1, -1), ('operator', 0, 0, -1), ('bz2', 1, 1, -1), ('stat', 0, 0, -1)] binaries=[] datas=[]>
grp: None -> None
  DEL grp
grp: None -> None
  DEL grp
pwd: None -> None
  DEL pwd
zipfile: None -> <PyModule 'zipfile' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\zipfile.pyc imports=[('re', 0, 0, -1), ('textwrap', 1, 0, -1), ('sys', 0, 0, -1), ('shutil', 0, 0, -1), ('os', 0, 0, -1), ('struct', 0, 0, -1), ('cStringIO', 0, 0, -1), ('stat', 0, 0, -1), ('string', 0, 0, -1), ('zlib', 0, 0, -1), ('binascii', 0, 0, -1), ('py_compile', 1, 1, -1), ('time', 0, 0, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
distutils.distutils: None -> None
distutils.sys: None -> None
distutils.os: None -> None
distutils.sysconfig: None -> <PyModule 'distutils.sysconfig' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\distutils\sysconfig.pyc imports=[('_osx_support', 1, 1, -1), ('distutils.text_file', 1, 0, -1), ('re', 0, 0, -1), ('_sysconfigdata.build_time_vars', 1, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('string', 0, 0, -1), ('distutils.errors.DistutilsPlatformError', 0, 0, -1), ('distutils.errors', 0, 0, -1), ('_sysconfigdata', 1, 0, -1), ('distutils.text_file.TextFile', 1, 0, -1)] binaries=[] datas=[]>
distutils.errno: None -> None
distutils.log: None -> <PyModule 'distutils.log' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\distutils\log.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
distutils._osx_support: None -> None
_osx_support: None -> <PyModule '_osx_support' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\_osx_support.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('distutils', 1, 1, -1), ('tempfile', 1, 0, -1), ('contextlib', 1, 0, -1), ('distutils.log', 1, 1, -1)] binaries=[] datas=[]>
distutils.text_file: None -> <PyModule 'distutils.text_file' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\distutils\text_file.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
distutils.re: None -> None
distutils._sysconfigdata: None -> None
_sysconfigdata: None -> None
  DEL _sysconfigdata
distutils.string: None -> None
_sysconfigdata: None -> None
  DEL _sysconfigdata
pwd: None -> None
  DEL pwd
grp: None -> None
  DEL grp
py_compile: None -> <PyModule 'py_compile' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\py_compile.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 0, 0, -1), ('__builtin__', 0, 0, -1), ('traceback', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.signal: None -> None
multiprocessing.thread: None -> None
multiprocessing.functools: None -> None
multiprocessing.pickle: None -> None
multiprocessing.time: None -> None
multiprocessing.imp: None -> None
multiprocessing._subprocess: None -> None
multiprocessing.errno: None -> None
multiprocessing.msvcrt: None -> None
multiprocessing.random: None -> None
multiprocessing.current_process: None -> None
  DEL multiprocessing.current_process
multiprocessing.socket: None -> None
multiprocessing.hmac: None -> None
multiprocessing.current_process: None -> None
  DEL multiprocessing.current_process
multiprocessing.xmlrpclib: None -> None
xmlrpclib: None -> <PyModule 'xmlrpclib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xmlrpclib.pyc imports=[('xmllib', 1, 0, -1), ('httplib', 0, 0, -1), ('base64', 1, 1, -1), ('sys.modules', 0, 0, -1), ('sys', 0, 0, -1), ('string', 0, 0, -1), ('cStringIO', 0, 0, -1), ('base64', 0, 0, -1), ('time', 0, 0, -1), ('xml.parsers', 0, 0, -1), ('types', 0, 0, -1), ('gzip', 0, 0, -1), ('socket', 0, 0, -1), ('datetime', 0, 0, -1), ('errno', 0, 0, -1), ('types.*', 0, 0, -1), ('re', 0, 0, -1), ('xml.parsers.expat', 0, 0, -1), ('urllib', 1, 0, -1), ('operator', 0, 0, -1), ('_xmlrpclib', 0, 0, -1), ('StringIO', 0, 1, -1)] binaries=[] datas=[]>
multiprocessing.AuthenticationError: None -> None
  DEL multiprocessing.AuthenticationError
xmllib: None -> <PyModule 'xmllib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xmllib.pyc imports=[('re', 0, 0, -1), ('time', 1, 0, -1), ('warnings', 0, 0, -1), ('string', 0, 0, -1), ('getopt', 1, 0, -1), ('sys', 1, 0, -1), ('time.time', 1, 0, -1)] binaries=[] datas=[]>
xml: None -> <PkgModule 'xml' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\__init__.pyc imports=[('sys', 0, 1, -1), ('_xmlplus', 0, 0, -1), ('xml.sax.xmlreader', 0, 0, -1), ('xml.sax.expatreader', 0, 0, -1)] binaries=[] datas=[]>
xml.parsers: None -> <PkgModule 'xml.parsers' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\parsers\__init__.pyc imports=[] binaries=[] datas=[]>
xml.parsers.expat: None -> <PyModule 'xml.parsers.expat' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\parsers\expat.pyc imports=[('pyexpat', 0, 0, -1), ('pyexpat.*', 0, 0, -1)] binaries=[] datas=[]>
_xmlrpclib: None -> None
  DEL _xmlrpclib
xml.sys: None -> None
xml._xmlplus: None -> None
_xmlplus: None -> None
  DEL _xmlplus
xml.xml: None -> None
xml.sax: None -> <PkgModule 'xml.sax' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\sax\__init__.pyc imports=[('handler', 0, 0, -1), ('_exceptions.SAXNotSupportedException', 0, 0, -1), ('cStringIO', 1, 0, -1), ('handler.ErrorHandler', 0, 0, -1), ('handler.ContentHandler', 0, 0, -1), ('xml.sax.expatreader', 0, 1, -1), ('_exceptions.SAXReaderNotAvailable', 0, 0, -1), ('_exceptions.SAXNotRecognizedException', 0, 0, -1), ('StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('_exceptions.SAXParseException', 0, 0, -1), ('_exceptions', 0, 0, -1), ('sys', 1, 1, -1), ('org.python.core', 1, 0, -1), ('xmlreader', 0, 0, -1), ('_exceptions.SAXException', 0, 0, -1), ('os', 0, 0, -1), ('org.python.core.imp', 1, 0, -1), ('xmlreader.InputSource', 0, 0, -1), ('StringIO.StringIO', 1, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.xmlreader: None -> <PyModule 'xml.sax.xmlreader' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\sax\xmlreader.pyc imports=[('handler', 0, 0, -1), ('_exceptions.SAXNotSupportedException', 0, 0, -1), ('saxutils', 1, 0, -1), ('_exceptions.SAXNotRecognizedException', 0, 0, -1), ('_exceptions', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.expatreader: None -> <PyModule 'xml.sax.expatreader' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\sax\expatreader.pyc imports=[('xml.sax.handler', 0, 0, -1), ('xml.sax.handler.property_xml_string', 0, 0, -1), ('xml.sax.handler.feature_external_pes', 0, 0, -1), ('sys', 0, 0, -1), ('xml.sax.xmlreader', 0, 0, -1), ('xml.sax.handler.feature_string_interning', 0, 0, -1), ('xml.sax._exceptions', 0, 0, -1), ('weakref', 0, 1, -1), ('xml.sax', 0, 0, -1), ('xml.sax.handler.feature_namespace_prefixes', 0, 0, -1), ('xml.sax.saxutils', 0, 0, -1), ('xml.parsers', 0, 0, -1), ('xml.sax._exceptions.*', 0, 0, -1), ('xml.sax.handler.feature_validation', 0, 0, -1), ('xml.sax.handler.property_interning_dict', 0, 0, -1), ('xml.sax.handler.feature_namespaces', 0, 0, -1), ('xml.sax.saxutils', 0, 1, -1), ('_weakref', 0, 0, -1), ('xml.sax.handler.feature_external_ges', 0, 0, -1), ('xml.parsers.expat', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.handler: None -> <PyModule 'xml.sax.handler' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\sax\handler.pyc imports=[] binaries=[] datas=[]>
xml.sax._exceptions: None -> <PyModule 'xml.sax._exceptions' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\sax\_exceptions.pyc imports=[('java.lang.Exception', 0, 1, -1), ('sys', 0, 0, -1), ('java.lang', 0, 1, -1)] binaries=[] datas=[]>
xml.sax.cStringIO: None -> None
xml.sax.xml: None -> None
xml.sax.StringIO: None -> None
xml.sax.sys: None -> None
xml.sax.org: None -> None
org: None -> None
  DEL org
xml.sax.os: None -> None
org: None -> None
  DEL org
xml.sax.java: None -> None
java: None -> None
  DEL java
java: None -> None
  DEL java
xml.sax.weakref: None -> None
xml.sax.saxutils: None -> <PyModule 'xml.sax.saxutils' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\sax\saxutils.pyc imports=[('handler', 0, 0, -1), ('sys', 0, 0, -1), ('sys', 1, 1, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('xmlreader', 0, 0, -1), ('urllib', 0, 0, -1), ('io', 0, 0, -1), ('urlparse', 0, 0, -1)] binaries=[] datas=[]>
xml.sax._weakref: None -> None
xml.sax.types: None -> None
xml.sax.urllib: None -> None
xml.sax.io: None -> None
xml.sax.urlparse: None -> None
xml.parsers.pyexpat: None -> None
pyexpat: None -> <ExtensionModule 'pyexpat' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\pyexpat.pyd imports=[('xmlparse', 0, 0, -1), ('xmltok', 0, 0, -1)] binaries=[] datas=[]>
xmlparse: None -> None
  DEL xmlparse
xmltok: None -> None
  DEL xmltok
multiprocessing.Process: None -> None
  DEL multiprocessing.Process
multiprocessing.cPickle: None -> None
multiprocessing.current_process: None -> None
  DEL multiprocessing.current_process
multiprocessing.array: None -> None
multiprocessing.Queue: None -> None
Queue: None -> <PyModule 'Queue' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\Queue.pyc imports=[('collections', 0, 0, -1), ('threading', 0, 0, -1), ('collections.deque', 0, 0, -1), ('time.time', 0, 0, -1), ('heapq', 0, 0, -1), ('dummy_threading', 0, 1, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.active_children: None -> None
  DEL multiprocessing.active_children
multiprocessing.Pool: None -> None
  DEL multiprocessing.Pool
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
multiprocessing.ctypes: None -> None
multiprocessing.heap: None -> <PyModule 'multiprocessing.heap' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\heap.pyc imports=[('multiprocessing.forking.assert_spawning', 0, 0, -1), ('threading', 0, 0, -1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('tempfile', 0, 0, -1), ('multiprocessing.util.info', 0, 0, -1), ('_multiprocessing.win32', 0, 1, -1), ('_multiprocessing', 0, 0, -1), ('mmap', 0, 0, -1), ('bisect', 0, 0, -1), ('multiprocessing.util.Finalize', 0, 0, -1), ('_multiprocessing', 0, 1, -1)] binaries=[] datas=[]>
multiprocessing.RLock: None -> None
  DEL multiprocessing.RLock
multiprocessing.mmap: None -> None
mmap: None -> <BuiltinModule 'mmap' None imports=[] binaries=[] datas=[]>
multiprocessing.bisect: None -> None
bisect: None -> <PyModule 'bisect' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\bisect.pyc imports=[('_bisect', 0, 0, -1), ('_bisect.*', 0, 0, -1)] binaries=[] datas=[]>
_bisect: None -> <BuiltinModule '_bisect' None imports=[] binaries=[] datas=[]>
multiprocessing.dummy: None -> <PkgModule 'multiprocessing.dummy' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\dummy\__init__.pyc imports=[('threading', 0, 0, -1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('multiprocessing.dummy.connection', 0, 0, -1), ('threading.BoundedSemaphore', 0, 0, -1), ('multiprocessing.pool.ThreadPool', 1, 0, -1), ('array', 0, 0, -1), ('threading.Semaphore', 0, 0, -1), ('threading.Lock', 0, 0, -1), ('multiprocessing.TimeoutError', 0, 0, -1), ('multiprocessing.cpu_count', 0, 0, -1), ('multiprocessing.pool', 1, 0, -1), ('threading.RLock', 0, 0, -1), ('multiprocessing.dummy.connection.Pipe', 0, 0, -1), ('Queue.Queue', 0, 0, -1), ('Queue', 0, 0, -1), ('threading.Event', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.collections: None -> None
multiprocessing.dummy.Process: None -> None
  DEL multiprocessing.dummy.Process
multiprocessing.TimeoutError: None -> None
  DEL multiprocessing.TimeoutError
multiprocessing.cpu_count: None -> None
  DEL multiprocessing.cpu_count
multiprocessing.Process: None -> None
  DEL multiprocessing.Process
multiprocessing.dummy.threading: None -> None
multiprocessing.dummy.itertools: None -> None
multiprocessing.dummy.sys: None -> None
multiprocessing.dummy.multiprocessing: None -> None
multiprocessing.dummy.connection: None -> <PyModule 'multiprocessing.dummy.connection' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\multiprocessing\dummy\connection.pyc imports=[('Queue', 0, 0, -1), ('Queue.Queue', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.dummy.array: None -> None
multiprocessing.TimeoutError: None -> None
  DEL multiprocessing.TimeoutError
multiprocessing.cpu_count: None -> None
  DEL multiprocessing.cpu_count
multiprocessing.dummy.Queue: None -> None
multiprocessing.dummy.weakref: None -> None
multiprocessing.Pipe: None -> None
  DEL multiprocessing.Pipe
django: None -> None
  DEL django
django: None -> None
  DEL django
cgi: None -> <PyModule 'cgi' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\cgi.pyc imports=[('tempfile', 1, 0, -1), ('traceback', 1, 0, -1), ('warnings.filterwarnings', 0, 0, -1), ('urlparse', 0, 0, -1), ('os', 0, 0, -1), ('rfc822', 0, 0, -1), ('warnings', 0, 0, -1), ('operator', 0, 0, -1), ('re', 1, 0, -1), ('warnings.catch_warnings', 0, 0, -1), ('cStringIO', 0, 0, -1), ('mimetools', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1), ('UserDict', 0, 0, -1), ('warnings.warn', 0, 0, -1), ('operator.attrgetter', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
htmlentitydefs: None -> <PyModule 'htmlentitydefs' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\htmlentitydefs.pyc imports=[] binaries=[] datas=[]>
json: None -> <PkgModule 'json' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\json\__init__.pyc imports=[('encoder', 0, 0, 1), ('encoder.JSONEncoder', 0, 0, 1), ('decoder.JSONDecoder', 0, 0, 1), ('decoder', 0, 0, 1)] binaries=[] datas=[]>
simplejson: None -> None
  DEL simplejson
json.encoder: None -> <PyModule 'json.encoder' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\json\encoder.pyc imports=[('_json.encode_basestring_ascii', 0, 0, -1), ('_json', 0, 0, -1), ('re', 0, 0, -1), ('_json.make_encoder', 0, 0, -1)] binaries=[] datas=[]>
json.decoder: None -> <PyModule 'json.decoder' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\json\decoder.pyc imports=[('re', 0, 0, -1), ('json', 0, 0, -1), ('sys', 0, 0, -1), ('_json.scanstring', 0, 0, -1), ('struct', 0, 0, -1), ('json.scanner', 0, 0, -1), ('_json', 0, 0, -1)] binaries=[] datas=[]>
json._json: None -> None
_json: None -> <BuiltinModule '_json' None imports=[] binaries=[] datas=[]>
json.re: None -> None
json.json: None -> None
json.sys: None -> None
json.struct: None -> None
json.scanner: None -> <PyModule 'json.scanner' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\json\scanner.pyc imports=[('_json', 0, 0, -1), ('re', 0, 0, -1), ('_json.make_scanner', 0, 0, -1)] binaries=[] datas=[]>
tornado.iostream: None -> <PyModule 'tornado.iostream' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\iostream.pyc imports=[('tornado.util.b', 0, 0, 0), ('tornado.stack_context', 0, 0, 0), ('sys', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('collections', 0, 0, 0), ('socket', 0, 0, 0), ('doctest', 1, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.util', 0, 0, 0), ('tornado.util.bytes_type', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.ioloop', 0, 0, 0), ('re', 0, 0, 0), ('logging', 0, 0, 0), ('ssl', 0, 0, 0), ('errno', 0, 0, 0), ('tornado', 0, 0, 0), ('os', 0, 0, 0)] binaries=[] datas=[]>
tornado.httputil: None -> <PyModule 'tornado.httputil' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\httputil.pyc imports=[('tornado.escape.parse_qs_bytes', 0, 0, 0), ('tornado.util.b', 0, 0, 0), ('tornado.escape', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('urllib', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.util.ObjectDict', 0, 0, 0), ('tornado.escape.utf8', 0, 0, 0), ('tornado.util', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('re', 0, 0, 0), ('logging', 0, 0, 0), ('tornado.escape.native_str', 0, 0, 0), ('doctest', 1, 0, 0)] binaries=[] datas=[]>
tornado.netutil: None -> <PyModule 'tornado.netutil' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\tornado-2.4.1-py2.7.egg\tornado\netutil.pyc imports=[('tornado.ioloop.IOLoop', 0, 0, 0), ('tornado.iostream', 0, 0, 0), ('tornado', 0, 0, 0), ('tornado.platform.auto.set_close_exec', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('socket', 0, 0, 0), ('tornado.iostream.IOStream', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('tornado.platform.auto', 0, 0, 0), ('tornado.process', 0, 0, 0), ('__future__.with_statement', 0, 0, 0), ('tornado.ioloop', 0, 0, 0), ('ssl', 0, 0, 0), ('stat', 0, 0, 0), ('logging', 0, 0, 0), ('errno', 0, 0, 0), ('tornado.iostream.SSLIOStream', 0, 0, 0), ('os', 0, 0, 0)] binaries=[] datas=[]>
csv: None -> <PyModule 'csv' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\csv.pyc imports=[('_csv.field_size_limit', 0, 0, -1), ('_csv.QUOTE_MINIMAL', 0, 0, -1), ('_csv.QUOTE_NONE', 0, 0, -1), ('_csv', 0, 0, -1), ('_csv.writer', 0, 0, -1), ('_csv.__version__', 0, 0, -1), ('_csv.register_dialect', 0, 0, -1), ('cStringIO', 0, 0, -1), ('_csv.Error', 0, 0, -1), ('functools', 0, 0, -1), ('_csv.get_dialect', 0, 0, -1), ('_csv.unregister_dialect', 0, 0, -1), ('_csv.QUOTE_NONNUMERIC', 0, 0, -1), ('_csv.Dialect', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('_csv.QUOTE_ALL', 0, 0, -1), ('_csv.reader', 0, 0, -1), ('re', 0, 0, -1), ('_csv.list_dialects', 0, 0, -1), ('functools.reduce', 0, 0, -1), ('StringIO', 0, 1, -1), ('_csv.__doc__', 0, 0, -1)] binaries=[] datas=[]>
_csv: None -> <BuiltinModule '_csv' None imports=[] binaries=[] datas=[]>
logging.handlers: None -> <PyModule 'logging.handlers' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\logging\handlers.pyc imports=[('re', 0, 0, -1), ('httplib', 1, 0, -1), ('stat.ST_DEV', 0, 0, -1), ('stat.ST_MTIME', 0, 0, -1), ('os', 0, 0, -1), ('email.utils', 1, 0, -1), ('smtplib', 1, 0, -1), ('email.utils.formatdate', 1, 0, -1), ('struct', 0, 0, -1), ('urllib', 1, 0, -1), ('logging', 0, 0, -1), ('cPickle', 0, 0, -1), ('stat.ST_INO', 0, 0, -1), ('socket', 0, 0, -1), ('win32evtlogutil', 1, 0, -1), ('win32evtlog', 1, 0, -1), ('errno', 0, 0, -1), ('time', 0, 0, -1), ('codecs', 0, 0, -1), ('stat', 0, 0, -1)] binaries=[] datas=[]>
curses: None -> <PkgModule 'curses' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\curses\__init__.pyc imports=[('curses.wrapper', 0, 0, -1), ('_curses.*', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('_curses', 0, 0, -1), ('_curses', 1, 0, -1), ('has_key', 0, 1, -1), ('has_key.has_key', 0, 1, -1), ('curses.wrapper.wrapper', 0, 0, -1), ('curses', 1, 0, -1)] binaries=[] datas=[]>
logging.re: None -> None
logging.httplib: None -> None
logging.stat: None -> None
logging.email: None -> None
logging.smtplib: None -> None
smtplib: None -> <PyModule 'smtplib' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\smtplib.pyc imports=[('re', 0, 0, -1), ('sys.stderr', 0, 0, -1), ('sys', 0, 0, -1), ('hmac', 0, 0, -1), ('email.base64mime.encode', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('ssl', 0, 0, -1), ('socket', 0, 0, -1), ('sys', 0, 1, -1), ('email.utils', 0, 0, -1), ('base64', 0, 0, -1)] binaries=[] datas=[]>
logging.struct: None -> None
logging.urllib: None -> None
logging.logging: None -> None
logging.cPickle: None -> None
logging.socket: None -> None
logging.win32evtlogutil: None -> None
win32evtlogutil: None -> <PyModule 'win32evtlogutil' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\win32\lib\win32evtlogutil.pyc imports=[('win32con', 0, 0, -1), ('win32evtlog', 0, 0, -1), ('win32api', 0, 0, -1), ('winerror', 0, 0, -1)] binaries=[] datas=[]>
logging.win32evtlog: None -> None
win32evtlog: None -> <ExtensionModule 'win32evtlog' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\win32\win32evtlog.pyd imports=[] binaries=[] datas=[]>
logging.errno: None -> None
win32con: None -> <PyModule 'win32con' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\win32\lib\win32con.pyc imports=[] binaries=[] datas=[]>
win32api: None -> <ExtensionModule 'win32api' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\win32\win32api.pyd imports=[] binaries=[] datas=[]>
winerror: None -> <PyModule 'winerror' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\win32\lib\winerror.pyc imports=[] binaries=[] datas=[]>
curses.curses: None -> None
curses.wrapper: None -> <PyModule 'curses.wrapper' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\curses\wrapper.pyc imports=[('curses', 0, 0, -1)] binaries=[] datas=[]>
curses._curses: None -> None
_curses: None -> None
  DEL _curses
curses.sys: None -> None
curses.os: None -> None
_curses: None -> None
  DEL _curses
_curses: None -> None
  DEL _curses
curses.has_key: None -> <PyModule 'curses.has_key' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\curses\has_key.pyc imports=[('_curses', 0, 0, -1)] binaries=[] datas=[]>
_curses: None -> None
  DEL _curses
handlers: None -> <PkgModule 'handlers' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\handlers\__init__.pyc imports=[] binaries=[] datas=[]>
handlers.home: None -> <PyModule 'handlers.home' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\handlers\home.pyc imports=[('handlers.custom', 0, 0, -1), ('handlers', 0, 0, -1)] binaries=[] datas=[]>
handlers.mapping: None -> <PyModule 'handlers.mapping' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\handlers\mapping.pyc imports=[('re', 0, 0, -1), ('libraries', 0, 0, -1), ('os', 0, 0, -1), ('handlers.custom', 0, 0, -1), ('configs', 0, 0, -1), ('handlers', 0, 0, -1), ('libraries.log', 0, 0, -1), ('libraries.xml_utils', 0, 0, -1), ('datetime', 0, 0, -1), ('traceback', 0, 0, -1), ('libraries.xls_utils', 0, 0, -1), ('datetime.datetime', 0, 0, -1), ('libraries.owl_utils', 0, 0, -1)] binaries=[] datas=[]>
handlers.browser: None -> <PyModule 'handlers.browser' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\handlers\browser.pyc imports=[('re', 0, 0, -1), ('libraries', 0, 0, -1), ('os', 0, 0, -1), ('handlers.custom', 0, 0, -1), ('handlers', 0, 0, -1), ('libraries.log', 0, 0, -1)] binaries=[] datas=[]>
handlers.transform: None -> <PyModule 'handlers.transform' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\handlers\transform.pyc imports=[('threading', 0, 0, -1), ('libraries', 0, 0, -1), ('os', 0, 0, -1), ('handlers.custom', 0, 0, -1), ('configs', 0, 0, -1), ('handlers', 0, 0, -1), ('libraries.log', 0, 0, -1), ('libraries.transform', 0, 0, -1), ('datetime', 0, 0, -1), ('time', 0, 0, -1), ('datetime.datetime', 0, 0, -1)] binaries=[] datas=[]>
handlers.handlers: None -> None
handlers.custom: None -> <PyModule 'handlers.custom' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\handlers\custom.pyc imports=[('tornado.web', 0, 0, -1), ('json', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('tornado.httputil', 0, 0, -1), ('socket', 0, 0, -1), ('datetime', 0, 0, -1), ('uuid', 0, 0, -1), ('base64', 0, 0, -1), ('tornado', 0, 0, -1)] binaries=[] datas=[]>
handlers.tornado: None -> None
handlers.json: None -> None
handlers.types: None -> None
handlers.os: None -> None
handlers.socket: None -> None
handlers.datetime: None -> None
handlers.uuid: None -> None
handlers.base64: None -> None
handlers.re: None -> None
handlers.libraries: None -> None
handlers.configs: None -> None
libraries.xml_utils: None -> <PyModule 'libraries.xml_utils' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\xml_utils.pyc imports=[('lxml.etree', 0, 0, -1), ('os', 0, 0, -1), ('configs', 0, 0, -1), ('log', 0, 0, -1), ('owl_utils.OwlAttribute', 0, 0, -1), ('lxml', 0, 0, -1), ('datetime', 0, 0, -1), ('xls_utils', 0, 0, -1), ('owl_utils', 0, 0, -1), ('xls_utils.XlsAttribute', 0, 0, -1)] binaries=[] datas=[]>
handlers.traceback: None -> None
libraries.xls_utils: None -> <PyModule 'libraries.xls_utils' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\application\libraries\xls_utils.pyc imports=[('os', 0, 0, -1), ('attributes', 0, 0, -1), ('xlrd', 0, 0, -1), ('attributes.Attribute', 0, 0, -1)] binaries=[] datas=[]>
libraries.xlrd: None -> None
xlrd: None -> <PkgModule 'xlrd' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\__init__.pyc imports=[('biffh.XL_CELL_BOOLEAN', 0, 0, -1), ('timemachine', 0, 0, -1), ('xldate', 0, 0, -1), ('os', 0, 0, -1), ('biffh.biff_count_records', 1, 0, -1), ('biffh.XL_CELL_NUMBER', 0, 0, -1), ('biffh.XL_CELL_DATE', 0, 0, -1), ('sheet.empty_cell', 0, 0, -1), ('biffh.XL_CELL_BLANK', 0, 0, -1), ('licences', 0, 0, -1), ('biffh.XL_CELL_EMPTY', 0, 0, -1), ('biffh', 1, 0, -1), ('info.__VERSION__', 0, 0, -1), ('biffh.biff_dump', 1, 0, -1), ('sys', 0, 0, -1), ('biffh.XL_CELL_ERROR', 0, 0, -1), ('sheet', 0, 0, -1), ('zipfile', 0, 0, -1), ('info', 0, 0, -1), ('pprint', 0, 0, -1), ('biffh.error_text_from_code', 0, 0, -1), ('book.Book', 0, 0, -1), ('xldate.xldate_as_tuple', 0, 0, -1), ('book', 0, 0, -1), ('encodings', 0, 1, -1), ('os.path', 0, 0, -1), ('biffh', 0, 0, -1), ('xlsx', 1, 1, -1), ('biffh.biff_text_from_num', 0, 0, -1), ('xldate.XLDateError', 0, 0, -1), ('biffh.XL_CELL_TEXT', 0, 0, -1), ('mmap', 0, 0, -1), ('formula.*', 0, 0, -1), ('formula', 0, 0, -1), ('book.Book', 1, 0, -1), ('book', 1, 0, -1), ('biffh.XLRDError', 0, 0, -1), ('book.colname', 0, 0, -1)] binaries=[] datas=[]>
xlrd.biffh: None -> <PyModule 'xlrd.biffh' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\biffh.pyc imports=[('timemachine.*', 0, 0, -1), ('struct.unpack', 0, 0, -1), ('sys', 0, 0, -1), ('struct', 0, 0, -1), ('timemachine', 0, 0, -1)] binaries=[] datas=[]>
xlrd.timemachine: None -> <PyModule 'xlrd.timemachine' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\timemachine.pyc imports=[('sys', 0, 0, -1), ('io.BytesIO', 0, 1, -1), ('__future__.nested_scopes', 0, 0, -1), ('array', 0, 0, -1), ('__future__', 0, 0, -1), ('io', 0, 1, -1), ('array.array', 0, 0, -1), ('cStringIO.StringIO', 0, 1, -1), ('cStringIO', 0, 1, -1)] binaries=[] datas=[]>
xlrd.xldate: None -> <PyModule 'xlrd.xldate' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\xldate.pyc imports=[('timemachine.int_floor_div', 0, 0, -1), ('timemachine', 0, 0, -1)] binaries=[] datas=[]>
xlrd.os: None -> None
xlrd.sheet: None -> <PyModule 'xlrd.sheet' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\sheet.pyc imports=[('formatting', 0, 0, -1), ('timemachine', 0, 0, -1), ('formatting.XF', 1, 0, -1), ('struct', 0, 0, -1), ('biffh.*', 0, 0, -1), ('formatting.XFProtection', 1, 0, -1), ('formula.rangename2d', 0, 0, -1), ('formatting.XFBorder', 1, 0, -1), ('formatting', 1, 0, -1), ('formula.decompile_formula', 0, 0, -1), ('struct.unpack', 0, 0, -1), ('time', 0, 0, -1), ('formatting.nearest_colour_index', 0, 0, -1), ('formatting.Format', 0, 0, -1), ('formula.FMLA_TYPE_CELL', 0, 0, -1), ('biffh', 0, 0, -1), ('formula.FMLA_TYPE_SHARED', 0, 0, -1), ('formula.dump_formula', 0, 0, -1), ('struct.calcsize', 0, 0, -1), ('formula', 0, 0, -1), ('timemachine.*', 0, 0, -1), ('formatting.XFBackground', 1, 0, -1), ('formatting.XFAlignment', 1, 0, -1)] binaries=[] datas=[]>
xlrd.licences: None -> <PyModule 'xlrd.licences' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\licences.pyc imports=[] binaries=[] datas=[]>
xlrd.info: None -> <PyModule 'xlrd.info' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\info.pyc imports=[] binaries=[] datas=[]>
xlrd.sys: None -> None
xlrd.zipfile: None -> None
xlrd.pprint: None -> None
xlrd.book: None -> <PyModule 'xlrd.book' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\book.pyc imports=[('formatting', 0, 0, -1), ('gc', 0, 0, -1), ('formula.*', 0, 0, -1), ('sys', 0, 0, -1), ('timemachine', 0, 0, -1), ('xldate', 0, 0, -1), ('encodings', 0, 1, -1), ('formula', 0, 0, -1), ('biffh', 0, 0, -1), ('struct', 0, 0, -1), ('biffh.*', 0, 0, -1), ('timemachine.*', 0, 0, -1), ('sheet', 0, 0, -1), ('xldate.xldate_as_tuple', 0, 0, -1), ('xldate.XLDateError', 0, 0, -1), ('mmap', 0, 0, -1), ('time', 0, 0, -1), ('compdoc', 0, 0, -1)] binaries=[] datas=[]>
xlrd.encodings: None -> None
xlrd.xlsx: None -> <PyModule 'xlrd.xlsx' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\xlsx.pyc imports=[('formatting', 0, 0, -1), ('biffh.XL_CELL_BOOLEAN', 0, 0, -1), ('timemachine', 0, 0, -1), ('formatting.is_date_format_string', 0, 0, -1), ('cElementTree', 1, 1, -1), ('biffh.XL_CELL_BLANK', 0, 0, -1), ('book.Name', 0, 0, -1), ('sys', 0, 0, -1), ('biffh.XL_CELL_ERROR', 0, 0, -1), ('xml.etree.cElementTree', 1, 1, -1), ('sheet', 0, 0, -1), ('zipfile', 0, 0, -1), ('formatting.XF', 0, 0, -1), ('pprint', 0, 0, -1), ('biffh.error_text_from_code', 0, 0, -1), ('sheet.Sheet', 0, 0, -1), ('book', 0, 0, -1), ('formatting.Format', 0, 0, -1), ('biffh', 0, 0, -1), ('book.Book', 0, 0, -1), ('biffh.XL_CELL_TEXT', 0, 0, -1), ('xml.etree.ElementTree', 1, 1, -1), ('re', 0, 0, -1), ('lxml.etree', 1, 1, -1), ('timemachine.*', 0, 0, -1), ('biffh.XLRDError', 0, 0, -1), ('elementtree.ElementTree', 1, 1, -1)] binaries=[] datas=[]>
xlrd.mmap: None -> None
xlrd.formula: None -> <PyModule 'xlrd.formula' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\formula.pyc imports=[('timemachine.*', 0, 0, -1), ('operator', 0, 0, -1), ('timemachine', 0, 0, -1), ('copy', 0, 0, -1), ('__future__.nested_scopes', 0, 0, -1), ('biffh.BaseObject', 0, 0, -1), ('biffh', 0, 0, -1), ('struct', 0, 0, -1), ('biffh.unpack_string_update_pos', 0, 0, -1), ('__future__', 0, 0, -1), ('biffh.hex_char_dump', 0, 0, -1), ('biffh.XLRDError', 0, 0, -1), ('struct.unpack', 0, 0, -1), ('biffh.error_text_from_code', 0, 0, -1), ('biffh.unpack_unicode_update_pos', 0, 0, -1)] binaries=[] datas=[]>
xlrd.struct: None -> None
xlrd.io: None -> None
xlrd.__future__: None -> None
xlrd.array: None -> None
xlrd.cStringIO: None -> None
xlrd.formatting: None -> <PyModule 'xlrd.formatting' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\formatting.pyc imports=[('timemachine', 0, 0, -1), ('biffh.FDT', 0, 0, -1), ('biffh.BaseObject', 0, 0, -1), ('biffh.XL_CELL_NUMBER', 0, 0, -1), ('biffh.XL_CELL_DATE', 0, 0, -1), ('biffh.FTX', 0, 0, -1), ('biffh.fprintf', 0, 0, -1), ('biffh.unpack_unicode', 0, 0, -1), ('biffh.XL_FORMAT', 0, 0, -1), ('struct.unpack', 0, 0, -1), ('biffh.upkbits', 0, 0, -1), ('biffh.FUN', 0, 0, -1), ('biffh.unpack_string', 0, 0, -1), ('biffh', 0, 0, -1), ('biffh.XL_FORMAT2', 0, 0, -1), ('struct', 0, 0, -1), ('biffh.upkbitsL', 0, 0, -1), ('re', 0, 0, -1), ('copy', 0, 0, -1), ('biffh.FNU', 0, 0, -1), ('timemachine.*', 0, 0, -1), ('biffh.XLRDError', 0, 0, -1), ('biffh.FGE', 0, 0, -1)] binaries=[] datas=[]>
xlrd.time: None -> None
xlrd.re: None -> None
xlrd.copy: None -> None
xlrd.operator: None -> None
xlrd.gc: None -> None
xlrd.compdoc: None -> <PyModule 'xlrd.compdoc' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\site-packages\xlrd-0.8.0-py2.7.egg\xlrd\compdoc.pyc imports=[('timemachine.*', 0, 0, -1), ('sys', 0, 0, -1), ('timemachine', 0, 0, -1), ('__future__.nested_scopes', 0, 0, -1), ('array', 0, 0, -1), ('struct', 0, 0, -1), ('__future__', 0, 0, -1), ('struct.unpack', 0, 0, -1)] binaries=[] datas=[]>
xlrd.cElementTree: None -> None
cElementTree: None -> None
  DEL cElementTree
xlrd.xml: None -> None
xml.etree: None -> <PkgModule 'xml.etree' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\etree\__init__.pyc imports=[] binaries=[] datas=[]>
xml.etree.cElementTree: None -> <PyModule 'xml.etree.cElementTree' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\etree\cElementTree.pyc imports=[('_elementtree.*', 0, 0, -1), ('_elementtree', 0, 0, -1), ('xml.etree.ElementTree', 0, 0, -1)] binaries=[] datas=[]>
xml.etree.ElementTree: None -> <PyModule 'xml.etree.ElementTree' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\etree\ElementTree.pyc imports=[('re', 0, 0, -1), ('xml.parsers.expat', 1, 0, -1), ('sys', 0, 0, -1), ('', 0, 0, 1), ('pyexpat', 1, 1, -1), ('warnings', 0, 0, -1), ('ElementC14N._serialize_c14n', 0, 0, -1), ('xml.parsers', 1, 1, -1), ('xml.parsers', 1, 0, -1), ('ElementPath', 0, 0, 1), ('ElementC14N', 0, 0, -1), ('xml.parsers.expat', 1, 1, -1)] binaries=[] datas=[]>
xlrd.lxml: None -> None
xlrd.elementtree: None -> None
elementtree: None -> None
  DEL elementtree
xml.etree._elementtree: None -> None
_elementtree: None -> <ExtensionModule '_elementtree' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\DLLs\_elementtree.pyd imports=[('pyexpat', 0, 0, -1), ('xml.etree.ElementTree', 0, 0, -1), ('copy', 0, 0, -1)] binaries=[] datas=[]>
xml.etree.xml: None -> None
xml.etree.re: None -> None
xml.etree.sys: None -> None
xml.etree.pyexpat: None -> None
xml.etree.warnings: None -> None
xml.etree.ElementC14N: None -> None
ElementC14N: None -> None
  DEL ElementC14N
xml.etree.ElementPath: None -> <PyModule 'xml.etree.ElementPath' C:\Data\cristip\work\CNAS-SIUI\L2S\src\trunk\python_x64\lib\xml\etree\ElementPath.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
ElementC14N: None -> None
  DEL ElementC14N
handlers.threading: None -> None
handlers.time: None -> None
libraries.subprocess: None -> None
libraries.csv: None -> None
libraries.getopt: None -> None
libraries.codecs: None -> None
libraries.time: None -> None
